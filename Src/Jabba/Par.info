-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Src/Jabba/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListInstr                               (4)
	Instr -> 'fun' Ident '(' ListArg ')' ':' Type Block   (5)
	Instr -> ';'                                       (6)
	Instr -> Ident '++' ';'                            (7)
	Instr -> Ident '--' ';'                            (8)
	Instr -> Ident '=' Expr ';'                        (9)
	Instr -> 'return' Expr ';'                         (10)
	Instr -> 'return' ';'                              (11)
	Instr -> 'yield' Expr ';'                          (12)
	Instr -> 'yield' ';'                               (13)
	Instr -> 'break' ';'                               (14)
	Instr -> 'continue' ';'                            (15)
	Instr -> 'if' Expr Block                           (16)
	Instr -> 'if' Expr Block 'else' Block              (17)
	Instr -> 'while' Expr Block                        (18)
	Instr -> 'while' Expr Block 'finally' Block        (19)
	Instr -> 'for' Ident '=' Expr '..' Expr Block      (20)
	Instr -> 'for' Ident 'in' Expr Block               (21)
	Instr -> Expr ';'                                  (22)
	Instr -> Decl ';'                                  (23)
	Arg -> 'var' Ident ':' Type                        (24)
	Arg -> 'val' Ident ':' Type                        (25)
	Arg -> 'var' Ident ':' 'new' Type                  (26)
	Arg -> 'val' Ident ':' 'new' Type                  (27)
	ListArg ->                                         (28)
	ListArg -> Arg                                     (29)
	ListArg -> Arg ',' ListArg                         (30)
	Item -> Ident ':' Type '=' Expr                    (31)
	Item -> Ident ':' Type                             (32)
	ListItem ->                                        (33)
	ListItem -> Item                                   (34)
	ListItem -> Item ',' ListItem                      (35)
	Decl -> 'var' ListItem                             (36)
	Decl -> 'val' ListItem                             (37)
	Block -> '{' ListInstr '}'                         (38)
	ListInstr ->                                       (39)
	ListInstr -> Instr ListInstr                       (40)
	Type -> 'Integer'                                  (41)
	Type -> 'Boolean'                                  (42)
	Type -> 'String'                                   (43)
	Type -> 'Gen' '[' Type ']'                         (44)
	Type -> 'Unit'                                     (45)
	PlsOp -> '+'                                       (46)
	PlsOp -> '-'                                       (47)
	MulOp -> '*'                                       (48)
	MulOp -> '/'                                       (49)
	MulOp -> '%'                                       (50)
	NotOp -> '!'                                       (51)
	NegOp -> '-'                                       (52)
	AndOp -> '&&'                                      (53)
	OrOp -> '||'                                       (54)
	RelOp -> '=='                                      (55)
	RelOp -> '!='                                      (56)
	RelOp -> '<'                                       (57)
	RelOp -> '>'                                       (58)
	RelOp -> '<='                                      (59)
	RelOp -> '>='                                      (60)
	Expr6 -> Ident                                     (61)
	Expr6 -> Integer                                   (62)
	Expr6 -> 'true'                                    (63)
	Expr6 -> 'false'                                   (64)
	Expr6 -> Ident '(' ListExpr ')'                    (65)
	Expr6 -> String                                    (66)
	Expr6 -> '(' Expr ')'                              (67)
	Expr5 -> NegOp Expr6                               (68)
	Expr5 -> NotOp Expr6                               (69)
	Expr5 -> Expr6                                     (70)
	Expr4 -> Expr4 MulOp Expr5                         (71)
	Expr4 -> Expr5                                     (72)
	Expr3 -> Expr3 PlsOp Expr4                         (73)
	Expr3 -> Expr4                                     (74)
	Expr2 -> Expr2 RelOp Expr3                         (75)
	Expr2 -> Expr3                                     (76)
	Expr1 -> Expr2 AndOp Expr1                         (77)
	Expr1 -> Expr2                                     (78)
	Expr -> Expr1 OrOp Expr                            (79)
	Expr -> Expr1 '?' Expr1 ':' Expr                   (80)
	Expr -> Expr1                                      (81)
	ListExpr ->                                        (82)
	ListExpr -> Expr                                   (83)
	ListExpr -> Expr ',' ListExpr                      (84)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'..'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	':'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'?'            { PT _ (TS _ 23) }
	'Boolean'      { PT _ (TS _ 24) }
	'Gen'          { PT _ (TS _ 25) }
	'Integer'      { PT _ (TS _ 26) }
	'String'       { PT _ (TS _ 27) }
	'Unit'         { PT _ (TS _ 28) }
	'['            { PT _ (TS _ 29) }
	']'            { PT _ (TS _ 30) }
	'break'        { PT _ (TS _ 31) }
	'continue'     { PT _ (TS _ 32) }
	'else'         { PT _ (TS _ 33) }
	'false'        { PT _ (TS _ 34) }
	'finally'      { PT _ (TS _ 35) }
	'for'          { PT _ (TS _ 36) }
	'fun'          { PT _ (TS _ 37) }
	'if'           { PT _ (TS _ 38) }
	'in'           { PT _ (TS _ 39) }
	'new'          { PT _ (TS _ 40) }
	'return'       { PT _ (TS _ 41) }
	'true'         { PT _ (TS _ 42) }
	'val'          { PT _ (TS _ 43) }
	'var'          { PT _ (TS _ 44) }
	'while'        { PT _ (TS _ 45) }
	'yield'        { PT _ (TS _ 46) }
	'{'            { PT _ (TS _ 47) }
	'||'           { PT _ (TS _ 48) }
	'}'            { PT _ (TS _ 49) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Instr           rules 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
	Arg             rules 24, 25, 26, 27
	ListArg         rules 28, 29, 30
	Item            rules 31, 32
	ListItem        rules 33, 34, 35
	Decl            rules 36, 37
	Block           rule  38
	ListInstr       rules 39, 40
	Type            rules 41, 42, 43, 44, 45
	PlsOp           rules 46, 47
	MulOp           rules 48, 49, 50
	NotOp           rule  51
	NegOp           rule  52
	AndOp           rule  53
	OrOp            rule  54
	RelOp           rules 55, 56, 57, 58, 59, 60
	Expr6           rules 61, 62, 63, 64, 65, 66, 67
	Expr5           rules 68, 69, 70
	Expr4           rules 71, 72
	Expr3           rules 73, 74
	Expr2           rules 75, 76
	Expr1           rules 77, 78
	Expr            rules 79, 80, 81
	ListExpr        rules 82, 83, 84

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	';'            shift, and enter state 22
	'break'        shift, and enter state 23
	'continue'     shift, and enter state 24
	'false'        shift, and enter state 25
	'for'          shift, and enter state 26
	'fun'          shift, and enter state 27
	'if'           shift, and enter state 28
	'return'       shift, and enter state 29
	'true'         shift, and enter state 30
	'val'          shift, and enter state 31
	'var'          shift, and enter state 32
	'while'        shift, and enter state 33
	'yield'        shift, and enter state 34
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36
	%eof           reduce using rule 39

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Program        goto state 6
	Instr          goto state 7
	Decl           goto state 8
	ListInstr      goto state 9
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 18

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'..'           reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'?'            reduce using rule 1
	'in'           reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1


State 3

	Instr -> Ident . '++' ';'                           (rule 7)
	Instr -> Ident . '--' ';'                           (rule 8)
	Instr -> Ident . '=' Expr ';'                       (rule 9)
	Expr6 -> Ident .                                    (rule 61)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 65)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	'('            shift, and enter state 77
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	'++'           shift, and enter state 78
	'-'            reduce using rule 61
	'--'           shift, and enter state 79
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            shift, and enter state 80
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'?'            reduce using rule 61
	'||'           reduce using rule 61


State 4

	Expr6 -> Integer .                                  (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'..'           reduce using rule 62
	'/'            reduce using rule 62
	':'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'?'            reduce using rule 62
	'{'            reduce using rule 62
	'||'           reduce using rule 62


State 5

	Expr6 -> String .                                   (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'..'           reduce using rule 66
	'/'            reduce using rule 66
	':'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'?'            reduce using rule 66
	'{'            reduce using rule 66
	'||'           reduce using rule 66


State 6

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 7

	ListInstr -> Instr . ListInstr                      (rule 40)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	';'            shift, and enter state 22
	'break'        shift, and enter state 23
	'continue'     shift, and enter state 24
	'false'        shift, and enter state 25
	'for'          shift, and enter state 26
	'fun'          shift, and enter state 27
	'if'           shift, and enter state 28
	'return'       shift, and enter state 29
	'true'         shift, and enter state 30
	'val'          shift, and enter state 31
	'var'          shift, and enter state 32
	'while'        shift, and enter state 33
	'yield'        shift, and enter state 34
	'}'            reduce using rule 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36
	%eof           reduce using rule 39

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Instr          goto state 7
	Decl           goto state 8
	ListInstr      goto state 76
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 18

State 8

	Instr -> Decl . ';'                                 (rule 23)

	';'            shift, and enter state 75


State 9

	Program -> ListInstr .                              (rule 4)

	%eof           reduce using rule 4


State 10

	Expr5 -> NotOp . Expr6                              (rule 69)

	'('            shift, and enter state 20
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 74

State 11

	Expr5 -> NegOp . Expr6                              (rule 68)

	'('            shift, and enter state 20
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 73

State 12

	Expr5 -> Expr6 .                                    (rule 70)

	'!='           reduce using rule 70
	'%'            reduce using rule 70
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'+'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'..'           reduce using rule 70
	'/'            reduce using rule 70
	':'            reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	'?'            reduce using rule 70
	'{'            reduce using rule 70
	'||'           reduce using rule 70


State 13

	Expr4 -> Expr5 .                                    (rule 72)

	'!='           reduce using rule 72
	'%'            reduce using rule 72
	'&&'           reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'+'            reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'..'           reduce using rule 72
	'/'            reduce using rule 72
	':'            reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'?'            reduce using rule 72
	'{'            reduce using rule 72
	'||'           reduce using rule 72


State 14

	Expr4 -> Expr4 . MulOp Expr5                        (rule 71)
	Expr3 -> Expr4 .                                    (rule 74)

	'!='           reduce using rule 74
	'%'            shift, and enter state 70
	'&&'           reduce using rule 74
	')'            reduce using rule 74
	'*'            shift, and enter state 71
	'+'            reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'..'           reduce using rule 74
	'/'            shift, and enter state 72
	':'            reduce using rule 74
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	'?'            reduce using rule 74
	'{'            reduce using rule 74
	'||'           reduce using rule 74

	MulOp          goto state 69

State 15

	Expr3 -> Expr3 . PlsOp Expr4                        (rule 73)
	Expr2 -> Expr3 .                                    (rule 76)

	'!='           reduce using rule 76
	'&&'           reduce using rule 76
	')'            reduce using rule 76
	'+'            shift, and enter state 67
	','            reduce using rule 76
	'-'            shift, and enter state 68
	'..'           reduce using rule 76
	':'            reduce using rule 76
	';'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	'?'            reduce using rule 76
	'{'            reduce using rule 76
	'||'           reduce using rule 76

	PlsOp          goto state 66

State 16

	Expr2 -> Expr2 . RelOp Expr3                        (rule 75)
	Expr1 -> Expr2 . AndOp Expr1                        (rule 77)
	Expr1 -> Expr2 .                                    (rule 78)

	'!='           shift, and enter state 59
	'&&'           shift, and enter state 60
	')'            reduce using rule 78
	','            reduce using rule 78
	'..'           reduce using rule 78
	':'            reduce using rule 78
	';'            reduce using rule 78
	'<'            shift, and enter state 61
	'<='           shift, and enter state 62
	'=='           shift, and enter state 63
	'>'            shift, and enter state 64
	'>='           shift, and enter state 65
	'?'            reduce using rule 78
	'{'            reduce using rule 78
	'||'           reduce using rule 78

	AndOp          goto state 57
	RelOp          goto state 58

State 17

	Expr -> Expr1 . OrOp Expr                           (rule 79)
	Expr -> Expr1 . '?' Expr1 ':' Expr                  (rule 80)
	Expr -> Expr1 .                                     (rule 81)

	')'            reduce using rule 81
	','            reduce using rule 81
	'..'           reduce using rule 81
	';'            reduce using rule 81
	'?'            shift, and enter state 55
	'{'            reduce using rule 81
	'||'           shift, and enter state 56

	OrOp           goto state 54

State 18

	Instr -> Expr . ';'                                 (rule 22)

	';'            shift, and enter state 53


State 19

	NotOp -> '!' .                                      (rule 51)

	'('            reduce using rule 51
	'false'        reduce using rule 51
	'true'         reduce using rule 51
	L_Ident        reduce using rule 51
	L_integ        reduce using rule 51
	L_quoted       reduce using rule 51


State 20

	Expr6 -> '(' . Expr ')'                             (rule 67)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 52

State 21

	NegOp -> '-' .                                      (rule 52)

	'('            reduce using rule 52
	'false'        reduce using rule 52
	'true'         reduce using rule 52
	L_Ident        reduce using rule 52
	L_integ        reduce using rule 52
	L_quoted       reduce using rule 52


State 22

	Instr -> ';' .                                      (rule 6)

	'!'            reduce using rule 6
	'('            reduce using rule 6
	'-'            reduce using rule 6
	';'            reduce using rule 6
	'break'        reduce using rule 6
	'continue'     reduce using rule 6
	'false'        reduce using rule 6
	'for'          reduce using rule 6
	'fun'          reduce using rule 6
	'if'           reduce using rule 6
	'return'       reduce using rule 6
	'true'         reduce using rule 6
	'val'          reduce using rule 6
	'var'          reduce using rule 6
	'while'        reduce using rule 6
	'yield'        reduce using rule 6
	'}'            reduce using rule 6
	L_Ident        reduce using rule 6
	L_integ        reduce using rule 6
	L_quoted       reduce using rule 6
	%eof           reduce using rule 6


State 23

	Instr -> 'break' . ';'                              (rule 14)

	';'            shift, and enter state 51


State 24

	Instr -> 'continue' . ';'                           (rule 15)

	';'            shift, and enter state 50


State 25

	Expr6 -> 'false' .                                  (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'..'           reduce using rule 64
	'/'            reduce using rule 64
	':'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'?'            reduce using rule 64
	'{'            reduce using rule 64
	'||'           reduce using rule 64


State 26

	Instr -> 'for' . Ident '=' Expr '..' Expr Block     (rule 20)
	Instr -> 'for' . Ident 'in' Expr Block              (rule 21)

	L_Ident        shift, and enter state 2

	Ident          goto state 49

State 27

	Instr -> 'fun' . Ident '(' ListArg ')' ':' Type Block    (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 48

State 28

	Instr -> 'if' . Expr Block                          (rule 16)
	Instr -> 'if' . Expr Block 'else' Block             (rule 17)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 47

State 29

	Instr -> 'return' . Expr ';'                        (rule 10)
	Instr -> 'return' . ';'                             (rule 11)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	';'            shift, and enter state 46
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 45

State 30

	Expr6 -> 'true' .                                   (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'..'           reduce using rule 63
	'/'            reduce using rule 63
	':'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'?'            reduce using rule 63
	'{'            reduce using rule 63
	'||'           reduce using rule 63


State 31

	Decl -> 'val' . ListItem                            (rule 37)

	';'            reduce using rule 33
	L_Ident        shift, and enter state 2

	Ident          goto state 41
	Item           goto state 42
	ListItem       goto state 44

State 32

	Decl -> 'var' . ListItem                            (rule 36)

	';'            reduce using rule 33
	L_Ident        shift, and enter state 2

	Ident          goto state 41
	Item           goto state 42
	ListItem       goto state 43

State 33

	Instr -> 'while' . Expr Block                       (rule 18)
	Instr -> 'while' . Expr Block 'finally' Block       (rule 19)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 40

State 34

	Instr -> 'yield' . Expr ';'                         (rule 12)
	Instr -> 'yield' . ';'                              (rule 13)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	';'            shift, and enter state 39
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 38

State 35

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'..'           reduce using rule 2
	'/'            reduce using rule 2
	':'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'?'            reduce using rule 2
	'{'            reduce using rule 2
	'||'           reduce using rule 2


State 36

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'..'           reduce using rule 3
	'/'            reduce using rule 3
	':'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'?'            reduce using rule 3
	'{'            reduce using rule 3
	'||'           reduce using rule 3


State 37

	Expr6 -> Ident .                                    (rule 61)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 65)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	'('            shift, and enter state 77
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'..'           reduce using rule 61
	'/'            reduce using rule 61
	':'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'?'            reduce using rule 61
	'{'            reduce using rule 61
	'||'           reduce using rule 61


State 38

	Instr -> 'yield' Expr . ';'                         (rule 12)

	';'            shift, and enter state 102


State 39

	Instr -> 'yield' ';' .                              (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'break'        reduce using rule 13
	'continue'     reduce using rule 13
	'false'        reduce using rule 13
	'for'          reduce using rule 13
	'fun'          reduce using rule 13
	'if'           reduce using rule 13
	'return'       reduce using rule 13
	'true'         reduce using rule 13
	'val'          reduce using rule 13
	'var'          reduce using rule 13
	'while'        reduce using rule 13
	'yield'        reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 40

	Instr -> 'while' Expr . Block                       (rule 18)
	Instr -> 'while' Expr . Block 'finally' Block       (rule 19)

	'{'            shift, and enter state 97

	Block          goto state 101

State 41

	Item -> Ident . ':' Type '=' Expr                   (rule 31)
	Item -> Ident . ':' Type                            (rule 32)

	':'            shift, and enter state 100


State 42

	ListItem -> Item .                                  (rule 34)
	ListItem -> Item . ',' ListItem                     (rule 35)

	','            shift, and enter state 99
	';'            reduce using rule 34


State 43

	Decl -> 'var' ListItem .                            (rule 36)

	';'            reduce using rule 36


State 44

	Decl -> 'val' ListItem .                            (rule 37)

	';'            reduce using rule 37


State 45

	Instr -> 'return' Expr . ';'                        (rule 10)

	';'            shift, and enter state 98


State 46

	Instr -> 'return' ';' .                             (rule 11)

	'!'            reduce using rule 11
	'('            reduce using rule 11
	'-'            reduce using rule 11
	';'            reduce using rule 11
	'break'        reduce using rule 11
	'continue'     reduce using rule 11
	'false'        reduce using rule 11
	'for'          reduce using rule 11
	'fun'          reduce using rule 11
	'if'           reduce using rule 11
	'return'       reduce using rule 11
	'true'         reduce using rule 11
	'val'          reduce using rule 11
	'var'          reduce using rule 11
	'while'        reduce using rule 11
	'yield'        reduce using rule 11
	'}'            reduce using rule 11
	L_Ident        reduce using rule 11
	L_integ        reduce using rule 11
	L_quoted       reduce using rule 11
	%eof           reduce using rule 11


State 47

	Instr -> 'if' Expr . Block                          (rule 16)
	Instr -> 'if' Expr . Block 'else' Block             (rule 17)

	'{'            shift, and enter state 97

	Block          goto state 96

State 48

	Instr -> 'fun' Ident . '(' ListArg ')' ':' Type Block    (rule 5)

	'('            shift, and enter state 95


State 49

	Instr -> 'for' Ident . '=' Expr '..' Expr Block     (rule 20)
	Instr -> 'for' Ident . 'in' Expr Block              (rule 21)

	'='            shift, and enter state 93
	'in'           shift, and enter state 94


State 50

	Instr -> 'continue' ';' .                           (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'break'        reduce using rule 15
	'continue'     reduce using rule 15
	'false'        reduce using rule 15
	'for'          reduce using rule 15
	'fun'          reduce using rule 15
	'if'           reduce using rule 15
	'return'       reduce using rule 15
	'true'         reduce using rule 15
	'val'          reduce using rule 15
	'var'          reduce using rule 15
	'while'        reduce using rule 15
	'yield'        reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15
	%eof           reduce using rule 15


State 51

	Instr -> 'break' ';' .                              (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'break'        reduce using rule 14
	'continue'     reduce using rule 14
	'false'        reduce using rule 14
	'for'          reduce using rule 14
	'fun'          reduce using rule 14
	'if'           reduce using rule 14
	'return'       reduce using rule 14
	'true'         reduce using rule 14
	'val'          reduce using rule 14
	'var'          reduce using rule 14
	'while'        reduce using rule 14
	'yield'        reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 52

	Expr6 -> '(' Expr . ')'                             (rule 67)

	')'            shift, and enter state 92


State 53

	Instr -> Expr ';' .                                 (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'fun'          reduce using rule 22
	'if'           reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'val'          reduce using rule 22
	'var'          reduce using rule 22
	'while'        reduce using rule 22
	'yield'        reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22
	%eof           reduce using rule 22


State 54

	Expr -> Expr1 OrOp . Expr                           (rule 79)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 91

State 55

	Expr -> Expr1 '?' . Expr1 ':' Expr                  (rule 80)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 90

State 56

	OrOp -> '||' .                                      (rule 54)

	'!'            reduce using rule 54
	'('            reduce using rule 54
	'-'            reduce using rule 54
	'false'        reduce using rule 54
	'true'         reduce using rule 54
	L_Ident        reduce using rule 54
	L_integ        reduce using rule 54
	L_quoted       reduce using rule 54


State 57

	Expr1 -> Expr2 AndOp . Expr1                        (rule 77)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 89

State 58

	Expr2 -> Expr2 RelOp . Expr3                        (rule 75)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 88

State 59

	RelOp -> '!=' .                                     (rule 56)

	'!'            reduce using rule 56
	'('            reduce using rule 56
	'-'            reduce using rule 56
	'false'        reduce using rule 56
	'true'         reduce using rule 56
	L_Ident        reduce using rule 56
	L_integ        reduce using rule 56
	L_quoted       reduce using rule 56


State 60

	AndOp -> '&&' .                                     (rule 53)

	'!'            reduce using rule 53
	'('            reduce using rule 53
	'-'            reduce using rule 53
	'false'        reduce using rule 53
	'true'         reduce using rule 53
	L_Ident        reduce using rule 53
	L_integ        reduce using rule 53
	L_quoted       reduce using rule 53


State 61

	RelOp -> '<' .                                      (rule 57)

	'!'            reduce using rule 57
	'('            reduce using rule 57
	'-'            reduce using rule 57
	'false'        reduce using rule 57
	'true'         reduce using rule 57
	L_Ident        reduce using rule 57
	L_integ        reduce using rule 57
	L_quoted       reduce using rule 57


State 62

	RelOp -> '<=' .                                     (rule 59)

	'!'            reduce using rule 59
	'('            reduce using rule 59
	'-'            reduce using rule 59
	'false'        reduce using rule 59
	'true'         reduce using rule 59
	L_Ident        reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59


State 63

	RelOp -> '==' .                                     (rule 55)

	'!'            reduce using rule 55
	'('            reduce using rule 55
	'-'            reduce using rule 55
	'false'        reduce using rule 55
	'true'         reduce using rule 55
	L_Ident        reduce using rule 55
	L_integ        reduce using rule 55
	L_quoted       reduce using rule 55


State 64

	RelOp -> '>' .                                      (rule 58)

	'!'            reduce using rule 58
	'('            reduce using rule 58
	'-'            reduce using rule 58
	'false'        reduce using rule 58
	'true'         reduce using rule 58
	L_Ident        reduce using rule 58
	L_integ        reduce using rule 58
	L_quoted       reduce using rule 58


State 65

	RelOp -> '>=' .                                     (rule 60)

	'!'            reduce using rule 60
	'('            reduce using rule 60
	'-'            reduce using rule 60
	'false'        reduce using rule 60
	'true'         reduce using rule 60
	L_Ident        reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60


State 66

	Expr3 -> Expr3 PlsOp . Expr4                        (rule 73)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 87

State 67

	PlsOp -> '+' .                                      (rule 46)

	'!'            reduce using rule 46
	'('            reduce using rule 46
	'-'            reduce using rule 46
	'false'        reduce using rule 46
	'true'         reduce using rule 46
	L_Ident        reduce using rule 46
	L_integ        reduce using rule 46
	L_quoted       reduce using rule 46


State 68

	PlsOp -> '-' .                                      (rule 47)

	'!'            reduce using rule 47
	'('            reduce using rule 47
	'-'            reduce using rule 47
	'false'        reduce using rule 47
	'true'         reduce using rule 47
	L_Ident        reduce using rule 47
	L_integ        reduce using rule 47
	L_quoted       reduce using rule 47


State 69

	Expr4 -> Expr4 MulOp . Expr5                        (rule 71)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 86

State 70

	MulOp -> '%' .                                      (rule 50)

	'!'            reduce using rule 50
	'('            reduce using rule 50
	'-'            reduce using rule 50
	'false'        reduce using rule 50
	'true'         reduce using rule 50
	L_Ident        reduce using rule 50
	L_integ        reduce using rule 50
	L_quoted       reduce using rule 50


State 71

	MulOp -> '*' .                                      (rule 48)

	'!'            reduce using rule 48
	'('            reduce using rule 48
	'-'            reduce using rule 48
	'false'        reduce using rule 48
	'true'         reduce using rule 48
	L_Ident        reduce using rule 48
	L_integ        reduce using rule 48
	L_quoted       reduce using rule 48


State 72

	MulOp -> '/' .                                      (rule 49)

	'!'            reduce using rule 49
	'('            reduce using rule 49
	'-'            reduce using rule 49
	'false'        reduce using rule 49
	'true'         reduce using rule 49
	L_Ident        reduce using rule 49
	L_integ        reduce using rule 49
	L_quoted       reduce using rule 49


State 73

	Expr5 -> NegOp Expr6 .                              (rule 68)

	'!='           reduce using rule 68
	'%'            reduce using rule 68
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'..'           reduce using rule 68
	'/'            reduce using rule 68
	':'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'?'            reduce using rule 68
	'{'            reduce using rule 68
	'||'           reduce using rule 68


State 74

	Expr5 -> NotOp Expr6 .                              (rule 69)

	'!='           reduce using rule 69
	'%'            reduce using rule 69
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'..'           reduce using rule 69
	'/'            reduce using rule 69
	':'            reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	'?'            reduce using rule 69
	'{'            reduce using rule 69
	'||'           reduce using rule 69


State 75

	Instr -> Decl ';' .                                 (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'fun'          reduce using rule 23
	'if'           reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'val'          reduce using rule 23
	'var'          reduce using rule 23
	'while'        reduce using rule 23
	'yield'        reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23
	%eof           reduce using rule 23


State 76

	ListInstr -> Instr ListInstr .                      (rule 40)

	'}'            reduce using rule 40
	%eof           reduce using rule 40


State 77

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 65)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	')'            reduce using rule 82
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 84
	ListExpr       goto state 85

State 78

	Instr -> Ident '++' . ';'                           (rule 7)

	';'            shift, and enter state 83


State 79

	Instr -> Ident '--' . ';'                           (rule 8)

	';'            shift, and enter state 82


State 80

	Instr -> Ident '=' . Expr ';'                       (rule 9)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 81

State 81

	Instr -> Ident '=' Expr . ';'                       (rule 9)

	';'            shift, and enter state 122


State 82

	Instr -> Ident '--' ';' .                           (rule 8)

	'!'            reduce using rule 8
	'('            reduce using rule 8
	'-'            reduce using rule 8
	';'            reduce using rule 8
	'break'        reduce using rule 8
	'continue'     reduce using rule 8
	'false'        reduce using rule 8
	'for'          reduce using rule 8
	'fun'          reduce using rule 8
	'if'           reduce using rule 8
	'return'       reduce using rule 8
	'true'         reduce using rule 8
	'val'          reduce using rule 8
	'var'          reduce using rule 8
	'while'        reduce using rule 8
	'yield'        reduce using rule 8
	'}'            reduce using rule 8
	L_Ident        reduce using rule 8
	L_integ        reduce using rule 8
	L_quoted       reduce using rule 8
	%eof           reduce using rule 8


State 83

	Instr -> Ident '++' ';' .                           (rule 7)

	'!'            reduce using rule 7
	'('            reduce using rule 7
	'-'            reduce using rule 7
	';'            reduce using rule 7
	'break'        reduce using rule 7
	'continue'     reduce using rule 7
	'false'        reduce using rule 7
	'for'          reduce using rule 7
	'fun'          reduce using rule 7
	'if'           reduce using rule 7
	'return'       reduce using rule 7
	'true'         reduce using rule 7
	'val'          reduce using rule 7
	'var'          reduce using rule 7
	'while'        reduce using rule 7
	'yield'        reduce using rule 7
	'}'            reduce using rule 7
	L_Ident        reduce using rule 7
	L_integ        reduce using rule 7
	L_quoted       reduce using rule 7
	%eof           reduce using rule 7


State 84

	ListExpr -> Expr .                                  (rule 83)
	ListExpr -> Expr . ',' ListExpr                     (rule 84)

	')'            reduce using rule 83
	','            shift, and enter state 121


State 85

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 65)

	')'            shift, and enter state 120


State 86

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 71)

	'!='           reduce using rule 71
	'%'            reduce using rule 71
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	'+'            reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'..'           reduce using rule 71
	'/'            reduce using rule 71
	':'            reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	'?'            reduce using rule 71
	'{'            reduce using rule 71
	'||'           reduce using rule 71


State 87

	Expr4 -> Expr4 . MulOp Expr5                        (rule 71)
	Expr3 -> Expr3 PlsOp Expr4 .                        (rule 73)

	'!='           reduce using rule 73
	'%'            shift, and enter state 70
	'&&'           reduce using rule 73
	')'            reduce using rule 73
	'*'            shift, and enter state 71
	'+'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'..'           reduce using rule 73
	'/'            shift, and enter state 72
	':'            reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	'?'            reduce using rule 73
	'{'            reduce using rule 73
	'||'           reduce using rule 73

	MulOp          goto state 69

State 88

	Expr3 -> Expr3 . PlsOp Expr4                        (rule 73)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 75)

	'!='           reduce using rule 75
	'&&'           reduce using rule 75
	')'            reduce using rule 75
	'+'            shift, and enter state 67
	','            reduce using rule 75
	'-'            shift, and enter state 68
	'..'           reduce using rule 75
	':'            reduce using rule 75
	';'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	'?'            reduce using rule 75
	'{'            reduce using rule 75
	'||'           reduce using rule 75

	PlsOp          goto state 66

State 89

	Expr1 -> Expr2 AndOp Expr1 .                        (rule 77)

	')'            reduce using rule 77
	','            reduce using rule 77
	'..'           reduce using rule 77
	':'            reduce using rule 77
	';'            reduce using rule 77
	'?'            reduce using rule 77
	'{'            reduce using rule 77
	'||'           reduce using rule 77


State 90

	Expr -> Expr1 '?' Expr1 . ':' Expr                  (rule 80)

	':'            shift, and enter state 119


State 91

	Expr -> Expr1 OrOp Expr .                           (rule 79)

	')'            reduce using rule 79
	','            reduce using rule 79
	'..'           reduce using rule 79
	';'            reduce using rule 79
	'{'            reduce using rule 79


State 92

	Expr6 -> '(' Expr ')' .                             (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'..'           reduce using rule 67
	'/'            reduce using rule 67
	':'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'?'            reduce using rule 67
	'{'            reduce using rule 67
	'||'           reduce using rule 67


State 93

	Instr -> 'for' Ident '=' . Expr '..' Expr Block     (rule 20)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 118

State 94

	Instr -> 'for' Ident 'in' . Expr Block              (rule 21)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 117

State 95

	Instr -> 'fun' Ident '(' . ListArg ')' ':' Type Block    (rule 5)

	')'            reduce using rule 28
	'val'          shift, and enter state 115
	'var'          shift, and enter state 116

	Arg            goto state 113
	ListArg        goto state 114

State 96

	Instr -> 'if' Expr Block .                          (rule 16)
	Instr -> 'if' Expr Block . 'else' Block             (rule 17)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'break'        reduce using rule 16
	'continue'     reduce using rule 16
	'else'         shift, and enter state 112
	'false'        reduce using rule 16
	'for'          reduce using rule 16
	'fun'          reduce using rule 16
	'if'           reduce using rule 16
	'return'       reduce using rule 16
	'true'         reduce using rule 16
	'val'          reduce using rule 16
	'var'          reduce using rule 16
	'while'        reduce using rule 16
	'yield'        reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16
	%eof           reduce using rule 16


State 97

	Block -> '{' . ListInstr '}'                        (rule 38)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	';'            shift, and enter state 22
	'break'        shift, and enter state 23
	'continue'     shift, and enter state 24
	'false'        shift, and enter state 25
	'for'          shift, and enter state 26
	'fun'          shift, and enter state 27
	'if'           shift, and enter state 28
	'return'       shift, and enter state 29
	'true'         shift, and enter state 30
	'val'          shift, and enter state 31
	'var'          shift, and enter state 32
	'while'        shift, and enter state 33
	'yield'        shift, and enter state 34
	'}'            reduce using rule 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Instr          goto state 7
	Decl           goto state 8
	ListInstr      goto state 111
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 18

State 98

	Instr -> 'return' Expr ';' .                        (rule 10)

	'!'            reduce using rule 10
	'('            reduce using rule 10
	'-'            reduce using rule 10
	';'            reduce using rule 10
	'break'        reduce using rule 10
	'continue'     reduce using rule 10
	'false'        reduce using rule 10
	'for'          reduce using rule 10
	'fun'          reduce using rule 10
	'if'           reduce using rule 10
	'return'       reduce using rule 10
	'true'         reduce using rule 10
	'val'          reduce using rule 10
	'var'          reduce using rule 10
	'while'        reduce using rule 10
	'yield'        reduce using rule 10
	'}'            reduce using rule 10
	L_Ident        reduce using rule 10
	L_integ        reduce using rule 10
	L_quoted       reduce using rule 10
	%eof           reduce using rule 10


State 99

	ListItem -> Item ',' . ListItem                     (rule 35)

	';'            reduce using rule 33
	L_Ident        shift, and enter state 2

	Ident          goto state 41
	Item           goto state 42
	ListItem       goto state 110

State 100

	Item -> Ident ':' . Type '=' Expr                   (rule 31)
	Item -> Ident ':' . Type                            (rule 32)

	'Boolean'      shift, and enter state 105
	'Gen'          shift, and enter state 106
	'Integer'      shift, and enter state 107
	'String'       shift, and enter state 108
	'Unit'         shift, and enter state 109

	Type           goto state 104

State 101

	Instr -> 'while' Expr Block .                       (rule 18)
	Instr -> 'while' Expr Block . 'finally' Block       (rule 19)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'false'        reduce using rule 18
	'finally'      shift, and enter state 103
	'for'          reduce using rule 18
	'fun'          reduce using rule 18
	'if'           reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'val'          reduce using rule 18
	'var'          reduce using rule 18
	'while'        reduce using rule 18
	'yield'        reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	%eof           reduce using rule 18


State 102

	Instr -> 'yield' Expr ';' .                         (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'break'        reduce using rule 12
	'continue'     reduce using rule 12
	'false'        reduce using rule 12
	'for'          reduce using rule 12
	'fun'          reduce using rule 12
	'if'           reduce using rule 12
	'return'       reduce using rule 12
	'true'         reduce using rule 12
	'val'          reduce using rule 12
	'var'          reduce using rule 12
	'while'        reduce using rule 12
	'yield'        reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 103

	Instr -> 'while' Expr Block 'finally' . Block       (rule 19)

	'{'            shift, and enter state 97

	Block          goto state 135

State 104

	Item -> Ident ':' Type . '=' Expr                   (rule 31)
	Item -> Ident ':' Type .                            (rule 32)

	','            reduce using rule 32
	';'            reduce using rule 32
	'='            shift, and enter state 134


State 105

	Type -> 'Boolean' .                                 (rule 42)

	')'            reduce using rule 42
	','            reduce using rule 42
	';'            reduce using rule 42
	'='            reduce using rule 42
	']'            reduce using rule 42
	'{'            reduce using rule 42


State 106

	Type -> 'Gen' . '[' Type ']'                        (rule 44)

	'['            shift, and enter state 133


State 107

	Type -> 'Integer' .                                 (rule 41)

	')'            reduce using rule 41
	','            reduce using rule 41
	';'            reduce using rule 41
	'='            reduce using rule 41
	']'            reduce using rule 41
	'{'            reduce using rule 41


State 108

	Type -> 'String' .                                  (rule 43)

	')'            reduce using rule 43
	','            reduce using rule 43
	';'            reduce using rule 43
	'='            reduce using rule 43
	']'            reduce using rule 43
	'{'            reduce using rule 43


State 109

	Type -> 'Unit' .                                    (rule 45)

	')'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	'='            reduce using rule 45
	']'            reduce using rule 45
	'{'            reduce using rule 45


State 110

	ListItem -> Item ',' ListItem .                     (rule 35)

	';'            reduce using rule 35


State 111

	Block -> '{' ListInstr . '}'                        (rule 38)

	'}'            shift, and enter state 132


State 112

	Instr -> 'if' Expr Block 'else' . Block             (rule 17)

	'{'            shift, and enter state 97

	Block          goto state 131

State 113

	ListArg -> Arg .                                    (rule 29)
	ListArg -> Arg . ',' ListArg                        (rule 30)

	')'            reduce using rule 29
	','            shift, and enter state 130


State 114

	Instr -> 'fun' Ident '(' ListArg . ')' ':' Type Block    (rule 5)

	')'            shift, and enter state 129


State 115

	Arg -> 'val' . Ident ':' Type                       (rule 25)
	Arg -> 'val' . Ident ':' 'new' Type                 (rule 27)

	L_Ident        shift, and enter state 2

	Ident          goto state 128

State 116

	Arg -> 'var' . Ident ':' Type                       (rule 24)
	Arg -> 'var' . Ident ':' 'new' Type                 (rule 26)

	L_Ident        shift, and enter state 2

	Ident          goto state 127

State 117

	Instr -> 'for' Ident 'in' Expr . Block              (rule 21)

	'{'            shift, and enter state 97

	Block          goto state 126

State 118

	Instr -> 'for' Ident '=' Expr . '..' Expr Block     (rule 20)

	'..'           shift, and enter state 125


State 119

	Expr -> Expr1 '?' Expr1 ':' . Expr                  (rule 80)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 124

State 120

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'..'           reduce using rule 65
	'/'            reduce using rule 65
	':'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'?'            reduce using rule 65
	'{'            reduce using rule 65
	'||'           reduce using rule 65


State 121

	ListExpr -> Expr ',' . ListExpr                     (rule 84)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	')'            reduce using rule 82
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 84
	ListExpr       goto state 123

State 122

	Instr -> Ident '=' Expr ';' .                       (rule 9)

	'!'            reduce using rule 9
	'('            reduce using rule 9
	'-'            reduce using rule 9
	';'            reduce using rule 9
	'break'        reduce using rule 9
	'continue'     reduce using rule 9
	'false'        reduce using rule 9
	'for'          reduce using rule 9
	'fun'          reduce using rule 9
	'if'           reduce using rule 9
	'return'       reduce using rule 9
	'true'         reduce using rule 9
	'val'          reduce using rule 9
	'var'          reduce using rule 9
	'while'        reduce using rule 9
	'yield'        reduce using rule 9
	'}'            reduce using rule 9
	L_Ident        reduce using rule 9
	L_integ        reduce using rule 9
	L_quoted       reduce using rule 9
	%eof           reduce using rule 9


State 123

	ListExpr -> Expr ',' ListExpr .                     (rule 84)

	')'            reduce using rule 84


State 124

	Expr -> Expr1 '?' Expr1 ':' Expr .                  (rule 80)

	')'            reduce using rule 80
	','            reduce using rule 80
	'..'           reduce using rule 80
	';'            reduce using rule 80
	'{'            reduce using rule 80


State 125

	Instr -> 'for' Ident '=' Expr '..' . Expr Block     (rule 20)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 142

State 126

	Instr -> 'for' Ident 'in' Expr Block .              (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'fun'          reduce using rule 21
	'if'           reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'val'          reduce using rule 21
	'var'          reduce using rule 21
	'while'        reduce using rule 21
	'yield'        reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21
	%eof           reduce using rule 21


State 127

	Arg -> 'var' Ident . ':' Type                       (rule 24)
	Arg -> 'var' Ident . ':' 'new' Type                 (rule 26)

	':'            shift, and enter state 141


State 128

	Arg -> 'val' Ident . ':' Type                       (rule 25)
	Arg -> 'val' Ident . ':' 'new' Type                 (rule 27)

	':'            shift, and enter state 140


State 129

	Instr -> 'fun' Ident '(' ListArg ')' . ':' Type Block    (rule 5)

	':'            shift, and enter state 139


State 130

	ListArg -> Arg ',' . ListArg                        (rule 30)

	')'            reduce using rule 28
	'val'          shift, and enter state 115
	'var'          shift, and enter state 116

	Arg            goto state 113
	ListArg        goto state 138

State 131

	Instr -> 'if' Expr Block 'else' Block .             (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'false'        reduce using rule 17
	'for'          reduce using rule 17
	'fun'          reduce using rule 17
	'if'           reduce using rule 17
	'return'       reduce using rule 17
	'true'         reduce using rule 17
	'val'          reduce using rule 17
	'var'          reduce using rule 17
	'while'        reduce using rule 17
	'yield'        reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17
	%eof           reduce using rule 17


State 132

	Block -> '{' ListInstr '}' .                        (rule 38)

	'!'            reduce using rule 38
	'('            reduce using rule 38
	'-'            reduce using rule 38
	';'            reduce using rule 38
	'break'        reduce using rule 38
	'continue'     reduce using rule 38
	'else'         reduce using rule 38
	'false'        reduce using rule 38
	'finally'      reduce using rule 38
	'for'          reduce using rule 38
	'fun'          reduce using rule 38
	'if'           reduce using rule 38
	'return'       reduce using rule 38
	'true'         reduce using rule 38
	'val'          reduce using rule 38
	'var'          reduce using rule 38
	'while'        reduce using rule 38
	'yield'        reduce using rule 38
	'}'            reduce using rule 38
	L_Ident        reduce using rule 38
	L_integ        reduce using rule 38
	L_quoted       reduce using rule 38
	%eof           reduce using rule 38


State 133

	Type -> 'Gen' '[' . Type ']'                        (rule 44)

	'Boolean'      shift, and enter state 105
	'Gen'          shift, and enter state 106
	'Integer'      shift, and enter state 107
	'String'       shift, and enter state 108
	'Unit'         shift, and enter state 109

	Type           goto state 137

State 134

	Item -> Ident ':' Type '=' . Expr                   (rule 31)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 10
	NegOp          goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 136

State 135

	Instr -> 'while' Expr Block 'finally' Block .       (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'fun'          reduce using rule 19
	'if'           reduce using rule 19
	'return'       reduce using rule 19
	'true'         reduce using rule 19
	'val'          reduce using rule 19
	'var'          reduce using rule 19
	'while'        reduce using rule 19
	'yield'        reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19
	%eof           reduce using rule 19


State 136

	Item -> Ident ':' Type '=' Expr .                   (rule 31)

	','            reduce using rule 31
	';'            reduce using rule 31


State 137

	Type -> 'Gen' '[' Type . ']'                        (rule 44)

	']'            shift, and enter state 149


State 138

	ListArg -> Arg ',' ListArg .                        (rule 30)

	')'            reduce using rule 30


State 139

	Instr -> 'fun' Ident '(' ListArg ')' ':' . Type Block    (rule 5)

	'Boolean'      shift, and enter state 105
	'Gen'          shift, and enter state 106
	'Integer'      shift, and enter state 107
	'String'       shift, and enter state 108
	'Unit'         shift, and enter state 109

	Type           goto state 148

State 140

	Arg -> 'val' Ident ':' . Type                       (rule 25)
	Arg -> 'val' Ident ':' . 'new' Type                 (rule 27)

	'Boolean'      shift, and enter state 105
	'Gen'          shift, and enter state 106
	'Integer'      shift, and enter state 107
	'String'       shift, and enter state 108
	'Unit'         shift, and enter state 109
	'new'          shift, and enter state 147

	Type           goto state 146

State 141

	Arg -> 'var' Ident ':' . Type                       (rule 24)
	Arg -> 'var' Ident ':' . 'new' Type                 (rule 26)

	'Boolean'      shift, and enter state 105
	'Gen'          shift, and enter state 106
	'Integer'      shift, and enter state 107
	'String'       shift, and enter state 108
	'Unit'         shift, and enter state 109
	'new'          shift, and enter state 145

	Type           goto state 144

State 142

	Instr -> 'for' Ident '=' Expr '..' Expr . Block     (rule 20)

	'{'            shift, and enter state 97

	Block          goto state 143

State 143

	Instr -> 'for' Ident '=' Expr '..' Expr Block .     (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'fun'          reduce using rule 20
	'if'           reduce using rule 20
	'return'       reduce using rule 20
	'true'         reduce using rule 20
	'val'          reduce using rule 20
	'var'          reduce using rule 20
	'while'        reduce using rule 20
	'yield'        reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20
	%eof           reduce using rule 20


State 144

	Arg -> 'var' Ident ':' Type .                       (rule 24)

	')'            reduce using rule 24
	','            reduce using rule 24


State 145

	Arg -> 'var' Ident ':' 'new' . Type                 (rule 26)

	'Boolean'      shift, and enter state 105
	'Gen'          shift, and enter state 106
	'Integer'      shift, and enter state 107
	'String'       shift, and enter state 108
	'Unit'         shift, and enter state 109

	Type           goto state 152

State 146

	Arg -> 'val' Ident ':' Type .                       (rule 25)

	')'            reduce using rule 25
	','            reduce using rule 25


State 147

	Arg -> 'val' Ident ':' 'new' . Type                 (rule 27)

	'Boolean'      shift, and enter state 105
	'Gen'          shift, and enter state 106
	'Integer'      shift, and enter state 107
	'String'       shift, and enter state 108
	'Unit'         shift, and enter state 109

	Type           goto state 151

State 148

	Instr -> 'fun' Ident '(' ListArg ')' ':' Type . Block    (rule 5)

	'{'            shift, and enter state 97

	Block          goto state 150

State 149

	Type -> 'Gen' '[' Type ']' .                        (rule 44)

	')'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	'='            reduce using rule 44
	']'            reduce using rule 44
	'{'            reduce using rule 44


State 150

	Instr -> 'fun' Ident '(' ListArg ')' ':' Type Block .    (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'break'        reduce using rule 5
	'continue'     reduce using rule 5
	'false'        reduce using rule 5
	'for'          reduce using rule 5
	'fun'          reduce using rule 5
	'if'           reduce using rule 5
	'return'       reduce using rule 5
	'true'         reduce using rule 5
	'val'          reduce using rule 5
	'var'          reduce using rule 5
	'while'        reduce using rule 5
	'yield'        reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


State 151

	Arg -> 'val' Ident ':' 'new' Type .                 (rule 27)

	')'            reduce using rule 27
	','            reduce using rule 27


State 152

	Arg -> 'var' Ident ':' 'new' Type .                 (rule 26)

	')'            reduce using rule 26
	','            reduce using rule 26


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 85
Number of terminals: 52
Number of non-terminals: 29
Number of states: 153
