-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Src/Jabba/Par.y
-----------------------------------------------------------------------------

state 106 contains 24 reduce/reduce conflicts.

rule 15 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListInstr                               (4)
	Instr -> 'fun' Ident '(' ListArg ')' ':' Type Block   (5)
	Instr -> 'fun' Ident '(' ListArg ')' Block         (6)
	Instr -> ';'                                       (7)
	Instr -> Ident '++' ';'                            (8)
	Instr -> Ident '--' ';'                            (9)
	Instr -> Ident '=' Expr ';'                        (10)
	Instr -> 'return' Expr ';'                         (11)
	Instr -> 'return' ';'                              (12)
	Instr -> 'break' ';'                               (13)
	Instr -> 'continue' ';'                            (14)
	Instr -> 'if' Expr Block                           (15)
	Instr -> 'if' Expr Block ListElif                  (16)
	Instr -> 'if' Expr Block ListElif 'else' Block     (17)
	Instr -> 'while' Expr Block                        (18)
	Instr -> 'while' Expr Block 'finally' Block        (19)
	Instr -> 'for' Ident '=' Expr '..' Expr Block      (20)
	Instr -> Expr ';'                                  (21)
	Instr -> Decl ';'                                  (22)
	Instr -> Block                                     (23)
	Arg -> 'var' Ident ':' Type                        (24)
	Arg -> 'val' Ident ':' Type                        (25)
	Arg -> 'var' Ident ':' 'new' Type                  (26)
	Arg -> 'val' Ident ':' 'new' Type                  (27)
	ListArg ->                                         (28)
	ListArg -> Arg                                     (29)
	ListArg -> Arg ',' ListArg                         (30)
	Item -> Ident ':' Type '=' Expr                    (31)
	Item -> Ident '=' Expr                             (32)
	Item -> Ident ':' Type                             (33)
	ListItem ->                                        (34)
	ListItem -> Item                                   (35)
	ListItem -> Item ',' ListItem                      (36)
	Decl -> 'var' ListItem                             (37)
	Decl -> 'val' ListItem                             (38)
	Block -> '{' ListInstr '}'                         (39)
	ListInstr ->                                       (40)
	ListInstr -> Instr ListInstr                       (41)
	Elif -> 'elif' Expr Block                          (42)
	ListElif ->                                        (43)
	ListElif -> Elif ListElif                          (44)
	Type -> 'Integer'                                  (45)
	Type -> 'Boolean'                                  (46)
	Type -> 'String'                                   (47)
	Type -> 'Unit'                                     (48)
	Type -> '(' ListTArg ')' '->' Type                 (49)
	TArg -> 'var' Type                                 (50)
	TArg -> 'val' Type                                 (51)
	TArg -> 'var' '$' Type                             (52)
	TArg -> 'val' '$' Type                             (53)
	ListTArg ->                                        (54)
	ListTArg -> TArg                                   (55)
	ListTArg -> TArg ',' ListTArg                      (56)
	PlsOp -> '+'                                       (57)
	PlsOp -> '-'                                       (58)
	MulOp -> '*'                                       (59)
	MulOp -> '/'                                       (60)
	MulOp -> '%'                                       (61)
	NotOp -> '!'                                       (62)
	NegOp -> '-'                                       (63)
	AndOp -> '&&'                                      (64)
	OrOp -> '||'                                       (65)
	RelOp -> '=='                                      (66)
	RelOp -> '!='                                      (67)
	RelOp -> '<'                                       (68)
	RelOp -> '>'                                       (69)
	RelOp -> '<='                                      (70)
	RelOp -> '>='                                      (71)
	Expr6 -> Ident                                     (72)
	Expr6 -> Integer                                   (73)
	Expr6 -> 'true'                                    (74)
	Expr6 -> 'false'                                   (75)
	Expr6 -> 'unit'                                    (76)
	Expr6 -> String                                    (77)
	Expr6 -> '(' Expr ')'                              (78)
	Expr5 -> Expr5 '(' ListExpr ')'                    (79)
	Expr5 -> '|' ListArg '|' Block                     (80)
	Expr5 -> '||' Block                                (81)
	Expr5 -> NegOp Expr6                               (82)
	Expr5 -> NotOp Expr6                               (83)
	Expr5 -> Expr6                                     (84)
	Expr4 -> Expr4 MulOp Expr5                         (85)
	Expr4 -> Expr5                                     (86)
	Expr3 -> Expr3 PlsOp Expr4                         (87)
	Expr3 -> Expr4                                     (88)
	Expr2 -> Expr2 RelOp Expr3                         (89)
	Expr2 -> Expr3                                     (90)
	Expr1 -> Expr2 AndOp Expr1                         (91)
	Expr1 -> Expr2                                     (92)
	Expr -> Expr1 OrOp Expr                            (93)
	Expr -> Expr1 '?' Expr1 ':' Expr                   (94)
	Expr -> '|' ListArg '|' Expr1                      (95)
	Expr -> '||' Expr1                                 (96)
	Expr -> Expr1                                      (97)
	ListExpr ->                                        (98)
	ListExpr -> Expr                                   (99)
	ListExpr -> Expr ',' ListExpr                      (100)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'$'            { PT _ (TS _ 3) }
	'%'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'->'           { PT _ (TS _ 14) }
	'..'           { PT _ (TS _ 15) }
	'/'            { PT _ (TS _ 16) }
	':'            { PT _ (TS _ 17) }
	';'            { PT _ (TS _ 18) }
	'<'            { PT _ (TS _ 19) }
	'<='           { PT _ (TS _ 20) }
	'='            { PT _ (TS _ 21) }
	'=='           { PT _ (TS _ 22) }
	'>'            { PT _ (TS _ 23) }
	'>='           { PT _ (TS _ 24) }
	'?'            { PT _ (TS _ 25) }
	'Boolean'      { PT _ (TS _ 26) }
	'Integer'      { PT _ (TS _ 27) }
	'String'       { PT _ (TS _ 28) }
	'Unit'         { PT _ (TS _ 29) }
	'break'        { PT _ (TS _ 30) }
	'continue'     { PT _ (TS _ 31) }
	'elif'         { PT _ (TS _ 32) }
	'else'         { PT _ (TS _ 33) }
	'false'        { PT _ (TS _ 34) }
	'finally'      { PT _ (TS _ 35) }
	'for'          { PT _ (TS _ 36) }
	'fun'          { PT _ (TS _ 37) }
	'if'           { PT _ (TS _ 38) }
	'new'          { PT _ (TS _ 39) }
	'return'       { PT _ (TS _ 40) }
	'true'         { PT _ (TS _ 41) }
	'unit'         { PT _ (TS _ 42) }
	'val'          { PT _ (TS _ 43) }
	'var'          { PT _ (TS _ 44) }
	'while'        { PT _ (TS _ 45) }
	'{'            { PT _ (TS _ 46) }
	'|'            { PT _ (TS _ 47) }
	'||'           { PT _ (TS _ 48) }
	'}'            { PT _ (TS _ 49) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Instr           rules 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
	Arg             rules 24, 25, 26, 27
	ListArg         rules 28, 29, 30
	Item            rules 31, 32, 33
	ListItem        rules 34, 35, 36
	Decl            rules 37, 38
	Block           rule  39
	ListInstr       rules 40, 41
	Elif            rule  42
	ListElif        rules 43, 44
	Type            rules 45, 46, 47, 48, 49
	TArg            rules 50, 51, 52, 53
	ListTArg        rules 54, 55, 56
	PlsOp           rules 57, 58
	MulOp           rules 59, 60, 61
	NotOp           rule  62
	NegOp           rule  63
	AndOp           rule  64
	OrOp            rule  65
	RelOp           rules 66, 67, 68, 69, 70, 71
	Expr6           rules 72, 73, 74, 75, 76, 77, 78
	Expr5           rules 79, 80, 81, 82, 83, 84
	Expr4           rules 85, 86
	Expr3           rules 87, 88
	Expr2           rules 89, 90
	Expr1           rules 91, 92
	Expr            rules 93, 94, 95, 96, 97
	ListExpr        rules 98, 99, 100

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	';'            shift, and enter state 23
	'break'        shift, and enter state 24
	'continue'     shift, and enter state 25
	'false'        shift, and enter state 26
	'for'          shift, and enter state 27
	'fun'          shift, and enter state 28
	'if'           shift, and enter state 29
	'return'       shift, and enter state 30
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'val'          shift, and enter state 33
	'var'          shift, and enter state 34
	'while'        shift, and enter state 35
	'{'            shift, and enter state 36
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40
	%eof           reduce using rule 40

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Program        goto state 6
	Instr          goto state 7
	Decl           goto state 8
	Block          goto state 9
	ListInstr      goto state 10
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'..'           reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'?'            reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1


State 3

	Instr -> Ident . '++' ';'                           (rule 8)
	Instr -> Ident . '--' ';'                           (rule 9)
	Instr -> Ident . '=' Expr ';'                       (rule 10)
	Expr6 -> Ident .                                    (rule 72)

	'!='           reduce using rule 72
	'%'            reduce using rule 72
	'&&'           reduce using rule 72
	'('            reduce using rule 72
	'*'            reduce using rule 72
	'+'            reduce using rule 72
	'++'           shift, and enter state 89
	'-'            reduce using rule 72
	'--'           shift, and enter state 90
	'/'            reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'='            shift, and enter state 91
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'?'            reduce using rule 72
	'||'           reduce using rule 72


State 4

	Expr6 -> Integer .                                  (rule 73)

	'!='           reduce using rule 73
	'%'            reduce using rule 73
	'&&'           reduce using rule 73
	'('            reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'+'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'..'           reduce using rule 73
	'/'            reduce using rule 73
	':'            reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	'?'            reduce using rule 73
	'{'            reduce using rule 73
	'||'           reduce using rule 73


State 5

	Expr6 -> String .                                   (rule 77)

	'!='           reduce using rule 77
	'%'            reduce using rule 77
	'&&'           reduce using rule 77
	'('            reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	'+'            reduce using rule 77
	','            reduce using rule 77
	'-'            reduce using rule 77
	'..'           reduce using rule 77
	'/'            reduce using rule 77
	':'            reduce using rule 77
	';'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	'?'            reduce using rule 77
	'{'            reduce using rule 77
	'||'           reduce using rule 77


State 6

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 7

	ListInstr -> Instr . ListInstr                      (rule 41)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	';'            shift, and enter state 23
	'break'        shift, and enter state 24
	'continue'     shift, and enter state 25
	'false'        shift, and enter state 26
	'for'          shift, and enter state 27
	'fun'          shift, and enter state 28
	'if'           shift, and enter state 29
	'return'       shift, and enter state 30
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'val'          shift, and enter state 33
	'var'          shift, and enter state 34
	'while'        shift, and enter state 35
	'{'            shift, and enter state 36
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	'}'            reduce using rule 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40
	%eof           reduce using rule 40

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Instr          goto state 7
	Decl           goto state 8
	Block          goto state 9
	ListInstr      goto state 88
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 8

	Instr -> Decl . ';'                                 (rule 22)

	';'            shift, and enter state 87


State 9

	Instr -> Block .                                    (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'fun'          reduce using rule 23
	'if'           reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'unit'         reduce using rule 23
	'val'          reduce using rule 23
	'var'          reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'|'            reduce using rule 23
	'||'           reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23
	%eof           reduce using rule 23


State 10

	Program -> ListInstr .                              (rule 4)

	%eof           reduce using rule 4


State 11

	Expr5 -> NotOp . Expr6                              (rule 83)

	'('            shift, and enter state 21
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 86

State 12

	Expr5 -> NegOp . Expr6                              (rule 82)

	'('            shift, and enter state 21
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 85

State 13

	Expr5 -> Expr6 .                                    (rule 84)

	'!='           reduce using rule 84
	'%'            reduce using rule 84
	'&&'           reduce using rule 84
	'('            reduce using rule 84
	')'            reduce using rule 84
	'*'            reduce using rule 84
	'+'            reduce using rule 84
	','            reduce using rule 84
	'-'            reduce using rule 84
	'..'           reduce using rule 84
	'/'            reduce using rule 84
	':'            reduce using rule 84
	';'            reduce using rule 84
	'<'            reduce using rule 84
	'<='           reduce using rule 84
	'=='           reduce using rule 84
	'>'            reduce using rule 84
	'>='           reduce using rule 84
	'?'            reduce using rule 84
	'{'            reduce using rule 84
	'||'           reduce using rule 84


State 14

	Expr5 -> Expr5 . '(' ListExpr ')'                   (rule 79)
	Expr4 -> Expr5 .                                    (rule 86)

	'!='           reduce using rule 86
	'%'            reduce using rule 86
	'&&'           reduce using rule 86
	'('            shift, and enter state 84
	')'            reduce using rule 86
	'*'            reduce using rule 86
	'+'            reduce using rule 86
	','            reduce using rule 86
	'-'            reduce using rule 86
	'..'           reduce using rule 86
	'/'            reduce using rule 86
	':'            reduce using rule 86
	';'            reduce using rule 86
	'<'            reduce using rule 86
	'<='           reduce using rule 86
	'=='           reduce using rule 86
	'>'            reduce using rule 86
	'>='           reduce using rule 86
	'?'            reduce using rule 86
	'{'            reduce using rule 86
	'||'           reduce using rule 86


State 15

	Expr4 -> Expr4 . MulOp Expr5                        (rule 85)
	Expr3 -> Expr4 .                                    (rule 88)

	'!='           reduce using rule 88
	'%'            shift, and enter state 81
	'&&'           reduce using rule 88
	')'            reduce using rule 88
	'*'            shift, and enter state 82
	'+'            reduce using rule 88
	','            reduce using rule 88
	'-'            reduce using rule 88
	'..'           reduce using rule 88
	'/'            shift, and enter state 83
	':'            reduce using rule 88
	';'            reduce using rule 88
	'<'            reduce using rule 88
	'<='           reduce using rule 88
	'=='           reduce using rule 88
	'>'            reduce using rule 88
	'>='           reduce using rule 88
	'?'            reduce using rule 88
	'{'            reduce using rule 88
	'||'           reduce using rule 88

	MulOp          goto state 80

State 16

	Expr3 -> Expr3 . PlsOp Expr4                        (rule 87)
	Expr2 -> Expr3 .                                    (rule 90)

	'!='           reduce using rule 90
	'&&'           reduce using rule 90
	')'            reduce using rule 90
	'+'            shift, and enter state 78
	','            reduce using rule 90
	'-'            shift, and enter state 79
	'..'           reduce using rule 90
	':'            reduce using rule 90
	';'            reduce using rule 90
	'<'            reduce using rule 90
	'<='           reduce using rule 90
	'=='           reduce using rule 90
	'>'            reduce using rule 90
	'>='           reduce using rule 90
	'?'            reduce using rule 90
	'{'            reduce using rule 90
	'||'           reduce using rule 90

	PlsOp          goto state 77

State 17

	Expr2 -> Expr2 . RelOp Expr3                        (rule 89)
	Expr1 -> Expr2 . AndOp Expr1                        (rule 91)
	Expr1 -> Expr2 .                                    (rule 92)

	'!='           shift, and enter state 70
	'&&'           shift, and enter state 71
	')'            reduce using rule 92
	','            reduce using rule 92
	'..'           reduce using rule 92
	':'            reduce using rule 92
	';'            reduce using rule 92
	'<'            shift, and enter state 72
	'<='           shift, and enter state 73
	'=='           shift, and enter state 74
	'>'            shift, and enter state 75
	'>='           shift, and enter state 76
	'?'            reduce using rule 92
	'{'            reduce using rule 92
	'||'           reduce using rule 92

	AndOp          goto state 68
	RelOp          goto state 69

State 18

	Expr -> Expr1 . OrOp Expr                           (rule 93)
	Expr -> Expr1 . '?' Expr1 ':' Expr                  (rule 94)
	Expr -> Expr1 .                                     (rule 97)

	')'            reduce using rule 97
	','            reduce using rule 97
	'..'           reduce using rule 97
	';'            reduce using rule 97
	'?'            shift, and enter state 66
	'{'            reduce using rule 97
	'||'           shift, and enter state 67

	OrOp           goto state 65

State 19

	Instr -> Expr . ';'                                 (rule 21)

	';'            shift, and enter state 64


State 20

	NotOp -> '!' .                                      (rule 62)

	'('            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	'unit'         reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 21

	Expr6 -> '(' . Expr ')'                             (rule 78)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 63

State 22

	NegOp -> '-' .                                      (rule 63)

	'('            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	'unit'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 23

	Instr -> ';' .                                      (rule 7)

	'!'            reduce using rule 7
	'('            reduce using rule 7
	'-'            reduce using rule 7
	';'            reduce using rule 7
	'break'        reduce using rule 7
	'continue'     reduce using rule 7
	'false'        reduce using rule 7
	'for'          reduce using rule 7
	'fun'          reduce using rule 7
	'if'           reduce using rule 7
	'return'       reduce using rule 7
	'true'         reduce using rule 7
	'unit'         reduce using rule 7
	'val'          reduce using rule 7
	'var'          reduce using rule 7
	'while'        reduce using rule 7
	'{'            reduce using rule 7
	'|'            reduce using rule 7
	'||'           reduce using rule 7
	'}'            reduce using rule 7
	L_Ident        reduce using rule 7
	L_integ        reduce using rule 7
	L_quoted       reduce using rule 7
	%eof           reduce using rule 7


State 24

	Instr -> 'break' . ';'                              (rule 13)

	';'            shift, and enter state 62


State 25

	Instr -> 'continue' . ';'                           (rule 14)

	';'            shift, and enter state 61


State 26

	Expr6 -> 'false' .                                  (rule 75)

	'!='           reduce using rule 75
	'%'            reduce using rule 75
	'&&'           reduce using rule 75
	'('            reduce using rule 75
	')'            reduce using rule 75
	'*'            reduce using rule 75
	'+'            reduce using rule 75
	','            reduce using rule 75
	'-'            reduce using rule 75
	'..'           reduce using rule 75
	'/'            reduce using rule 75
	':'            reduce using rule 75
	';'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	'?'            reduce using rule 75
	'{'            reduce using rule 75
	'||'           reduce using rule 75


State 27

	Instr -> 'for' . Ident '=' Expr '..' Expr Block     (rule 20)

	L_Ident        shift, and enter state 2

	Ident          goto state 60

State 28

	Instr -> 'fun' . Ident '(' ListArg ')' ':' Type Block    (rule 5)
	Instr -> 'fun' . Ident '(' ListArg ')' Block        (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 59

State 29

	Instr -> 'if' . Expr Block                          (rule 15)
	Instr -> 'if' . Expr Block ListElif                 (rule 16)
	Instr -> 'if' . Expr Block ListElif 'else' Block    (rule 17)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 58

State 30

	Instr -> 'return' . Expr ';'                        (rule 11)
	Instr -> 'return' . ';'                             (rule 12)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	';'            shift, and enter state 57
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 56

State 31

	Expr6 -> 'true' .                                   (rule 74)

	'!='           reduce using rule 74
	'%'            reduce using rule 74
	'&&'           reduce using rule 74
	'('            reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'+'            reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'..'           reduce using rule 74
	'/'            reduce using rule 74
	':'            reduce using rule 74
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	'?'            reduce using rule 74
	'{'            reduce using rule 74
	'||'           reduce using rule 74


State 32

	Expr6 -> 'unit' .                                   (rule 76)

	'!='           reduce using rule 76
	'%'            reduce using rule 76
	'&&'           reduce using rule 76
	'('            reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	'+'            reduce using rule 76
	','            reduce using rule 76
	'-'            reduce using rule 76
	'..'           reduce using rule 76
	'/'            reduce using rule 76
	':'            reduce using rule 76
	';'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	'?'            reduce using rule 76
	'{'            reduce using rule 76
	'||'           reduce using rule 76


State 33

	Decl -> 'val' . ListItem                            (rule 38)

	';'            reduce using rule 34
	L_Ident        shift, and enter state 2

	Ident          goto state 52
	Item           goto state 53
	ListItem       goto state 55

State 34

	Decl -> 'var' . ListItem                            (rule 37)

	';'            reduce using rule 34
	L_Ident        shift, and enter state 2

	Ident          goto state 52
	Item           goto state 53
	ListItem       goto state 54

State 35

	Instr -> 'while' . Expr Block                       (rule 18)
	Instr -> 'while' . Expr Block 'finally' Block       (rule 19)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 51

State 36

	Block -> '{' . ListInstr '}'                        (rule 39)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	';'            shift, and enter state 23
	'break'        shift, and enter state 24
	'continue'     shift, and enter state 25
	'false'        shift, and enter state 26
	'for'          shift, and enter state 27
	'fun'          shift, and enter state 28
	'if'           shift, and enter state 29
	'return'       shift, and enter state 30
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'val'          shift, and enter state 33
	'var'          shift, and enter state 34
	'while'        shift, and enter state 35
	'{'            shift, and enter state 36
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	'}'            reduce using rule 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Instr          goto state 7
	Decl           goto state 8
	Block          goto state 9
	ListInstr      goto state 50
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 37

	Expr5 -> '|' . ListArg '|' Block                    (rule 80)
	Expr -> '|' . ListArg '|' Expr1                     (rule 95)

	'val'          shift, and enter state 48
	'var'          shift, and enter state 49
	'|'            reduce using rule 28

	Arg            goto state 46
	ListArg        goto state 47

State 38

	Expr5 -> '||' . Block                               (rule 81)
	Expr -> '||' . Expr1                                (rule 96)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'{'            shift, and enter state 36
	'|'            shift, and enter state 44
	'||'           shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	Block          goto state 42
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 43

State 39

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'..'           reduce using rule 2
	'/'            reduce using rule 2
	':'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'?'            reduce using rule 2
	'{'            reduce using rule 2
	'||'           reduce using rule 2


State 40

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'..'           reduce using rule 3
	'/'            reduce using rule 3
	':'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'?'            reduce using rule 3
	'{'            reduce using rule 3
	'||'           reduce using rule 3


State 41

	Expr6 -> Ident .                                    (rule 72)

	'!='           reduce using rule 72
	'%'            reduce using rule 72
	'&&'           reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'+'            reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'..'           reduce using rule 72
	'/'            reduce using rule 72
	':'            reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'?'            reduce using rule 72
	'{'            reduce using rule 72
	'||'           reduce using rule 72


State 42

	Expr5 -> '||' Block .                               (rule 81)

	'!='           reduce using rule 81
	'%'            reduce using rule 81
	'&&'           reduce using rule 81
	'('            reduce using rule 81
	')'            reduce using rule 81
	'*'            reduce using rule 81
	'+'            reduce using rule 81
	','            reduce using rule 81
	'-'            reduce using rule 81
	'..'           reduce using rule 81
	'/'            reduce using rule 81
	':'            reduce using rule 81
	';'            reduce using rule 81
	'<'            reduce using rule 81
	'<='           reduce using rule 81
	'=='           reduce using rule 81
	'>'            reduce using rule 81
	'>='           reduce using rule 81
	'?'            reduce using rule 81
	'{'            reduce using rule 81
	'||'           reduce using rule 81


State 43

	Expr -> '||' Expr1 .                                (rule 96)

	')'            reduce using rule 96
	','            reduce using rule 96
	'..'           reduce using rule 96
	';'            reduce using rule 96
	'{'            reduce using rule 96


State 44

	Expr5 -> '|' . ListArg '|' Block                    (rule 80)

	'val'          shift, and enter state 48
	'var'          shift, and enter state 49
	'|'            reduce using rule 28

	Arg            goto state 46
	ListArg        goto state 117

State 45

	Expr5 -> '||' . Block                               (rule 81)

	'{'            shift, and enter state 36

	Block          goto state 42

State 46

	ListArg -> Arg .                                    (rule 29)
	ListArg -> Arg . ',' ListArg                        (rule 30)

	')'            reduce using rule 29
	','            shift, and enter state 116
	'|'            reduce using rule 29


State 47

	Expr5 -> '|' ListArg . '|' Block                    (rule 80)
	Expr -> '|' ListArg . '|' Expr1                     (rule 95)

	'|'            shift, and enter state 115


State 48

	Arg -> 'val' . Ident ':' Type                       (rule 25)
	Arg -> 'val' . Ident ':' 'new' Type                 (rule 27)

	L_Ident        shift, and enter state 2

	Ident          goto state 114

State 49

	Arg -> 'var' . Ident ':' Type                       (rule 24)
	Arg -> 'var' . Ident ':' 'new' Type                 (rule 26)

	L_Ident        shift, and enter state 2

	Ident          goto state 113

State 50

	Block -> '{' ListInstr . '}'                        (rule 39)

	'}'            shift, and enter state 112


State 51

	Instr -> 'while' Expr . Block                       (rule 18)
	Instr -> 'while' Expr . Block 'finally' Block       (rule 19)

	'{'            shift, and enter state 36

	Block          goto state 111

State 52

	Item -> Ident . ':' Type '=' Expr                   (rule 31)
	Item -> Ident . '=' Expr                            (rule 32)
	Item -> Ident . ':' Type                            (rule 33)

	':'            shift, and enter state 109
	'='            shift, and enter state 110


State 53

	ListItem -> Item .                                  (rule 35)
	ListItem -> Item . ',' ListItem                     (rule 36)

	','            shift, and enter state 108
	';'            reduce using rule 35


State 54

	Decl -> 'var' ListItem .                            (rule 37)

	';'            reduce using rule 37


State 55

	Decl -> 'val' ListItem .                            (rule 38)

	';'            reduce using rule 38


State 56

	Instr -> 'return' Expr . ';'                        (rule 11)

	';'            shift, and enter state 107


State 57

	Instr -> 'return' ';' .                             (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'break'        reduce using rule 12
	'continue'     reduce using rule 12
	'false'        reduce using rule 12
	'for'          reduce using rule 12
	'fun'          reduce using rule 12
	'if'           reduce using rule 12
	'return'       reduce using rule 12
	'true'         reduce using rule 12
	'unit'         reduce using rule 12
	'val'          reduce using rule 12
	'var'          reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'|'            reduce using rule 12
	'||'           reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 58

	Instr -> 'if' Expr . Block                          (rule 15)
	Instr -> 'if' Expr . Block ListElif                 (rule 16)
	Instr -> 'if' Expr . Block ListElif 'else' Block    (rule 17)

	'{'            shift, and enter state 36

	Block          goto state 106

State 59

	Instr -> 'fun' Ident . '(' ListArg ')' ':' Type Block    (rule 5)
	Instr -> 'fun' Ident . '(' ListArg ')' Block        (rule 6)

	'('            shift, and enter state 105


State 60

	Instr -> 'for' Ident . '=' Expr '..' Expr Block     (rule 20)

	'='            shift, and enter state 104


State 61

	Instr -> 'continue' ';' .                           (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'break'        reduce using rule 14
	'continue'     reduce using rule 14
	'false'        reduce using rule 14
	'for'          reduce using rule 14
	'fun'          reduce using rule 14
	'if'           reduce using rule 14
	'return'       reduce using rule 14
	'true'         reduce using rule 14
	'unit'         reduce using rule 14
	'val'          reduce using rule 14
	'var'          reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'|'            reduce using rule 14
	'||'           reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 62

	Instr -> 'break' ';' .                              (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'break'        reduce using rule 13
	'continue'     reduce using rule 13
	'false'        reduce using rule 13
	'for'          reduce using rule 13
	'fun'          reduce using rule 13
	'if'           reduce using rule 13
	'return'       reduce using rule 13
	'true'         reduce using rule 13
	'unit'         reduce using rule 13
	'val'          reduce using rule 13
	'var'          reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'|'            reduce using rule 13
	'||'           reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 63

	Expr6 -> '(' Expr . ')'                             (rule 78)

	')'            shift, and enter state 103


State 64

	Instr -> Expr ';' .                                 (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'fun'          reduce using rule 21
	'if'           reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'unit'         reduce using rule 21
	'val'          reduce using rule 21
	'var'          reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'|'            reduce using rule 21
	'||'           reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21
	%eof           reduce using rule 21


State 65

	Expr -> Expr1 OrOp . Expr                           (rule 93)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 102

State 66

	Expr -> Expr1 '?' . Expr1 ':' Expr                  (rule 94)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 44
	'||'           shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 101

State 67

	OrOp -> '||' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	'unit'         reduce using rule 65
	'|'            reduce using rule 65
	'||'           reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 68

	Expr1 -> Expr2 AndOp . Expr1                        (rule 91)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 44
	'||'           shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 100

State 69

	Expr2 -> Expr2 RelOp . Expr3                        (rule 89)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 44
	'||'           shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 99

State 70

	RelOp -> '!=' .                                     (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	'unit'         reduce using rule 67
	'|'            reduce using rule 67
	'||'           reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 71

	AndOp -> '&&' .                                     (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	'unit'         reduce using rule 64
	'|'            reduce using rule 64
	'||'           reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 72

	RelOp -> '<' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	'unit'         reduce using rule 68
	'|'            reduce using rule 68
	'||'           reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 73

	RelOp -> '<=' .                                     (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	'unit'         reduce using rule 70
	'|'            reduce using rule 70
	'||'           reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 74

	RelOp -> '==' .                                     (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	'unit'         reduce using rule 66
	'|'            reduce using rule 66
	'||'           reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 75

	RelOp -> '>' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	'unit'         reduce using rule 69
	'|'            reduce using rule 69
	'||'           reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 76

	RelOp -> '>=' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	'unit'         reduce using rule 71
	'|'            reduce using rule 71
	'||'           reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 77

	Expr3 -> Expr3 PlsOp . Expr4                        (rule 87)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 44
	'||'           shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 98

State 78

	PlsOp -> '+' .                                      (rule 57)

	'!'            reduce using rule 57
	'('            reduce using rule 57
	'-'            reduce using rule 57
	'false'        reduce using rule 57
	'true'         reduce using rule 57
	'unit'         reduce using rule 57
	'|'            reduce using rule 57
	'||'           reduce using rule 57
	L_Ident        reduce using rule 57
	L_integ        reduce using rule 57
	L_quoted       reduce using rule 57


State 79

	PlsOp -> '-' .                                      (rule 58)

	'!'            reduce using rule 58
	'('            reduce using rule 58
	'-'            reduce using rule 58
	'false'        reduce using rule 58
	'true'         reduce using rule 58
	'unit'         reduce using rule 58
	'|'            reduce using rule 58
	'||'           reduce using rule 58
	L_Ident        reduce using rule 58
	L_integ        reduce using rule 58
	L_quoted       reduce using rule 58


State 80

	Expr4 -> Expr4 MulOp . Expr5                        (rule 85)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 44
	'||'           shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 97

State 81

	MulOp -> '%' .                                      (rule 61)

	'!'            reduce using rule 61
	'('            reduce using rule 61
	'-'            reduce using rule 61
	'false'        reduce using rule 61
	'true'         reduce using rule 61
	'unit'         reduce using rule 61
	'|'            reduce using rule 61
	'||'           reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 82

	MulOp -> '*' .                                      (rule 59)

	'!'            reduce using rule 59
	'('            reduce using rule 59
	'-'            reduce using rule 59
	'false'        reduce using rule 59
	'true'         reduce using rule 59
	'unit'         reduce using rule 59
	'|'            reduce using rule 59
	'||'           reduce using rule 59
	L_Ident        reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59


State 83

	MulOp -> '/' .                                      (rule 60)

	'!'            reduce using rule 60
	'('            reduce using rule 60
	'-'            reduce using rule 60
	'false'        reduce using rule 60
	'true'         reduce using rule 60
	'unit'         reduce using rule 60
	'|'            reduce using rule 60
	'||'           reduce using rule 60
	L_Ident        reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60


State 84

	Expr5 -> Expr5 '(' . ListExpr ')'                   (rule 79)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	')'            reduce using rule 98
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 95
	ListExpr       goto state 96

State 85

	Expr5 -> NegOp Expr6 .                              (rule 82)

	'!='           reduce using rule 82
	'%'            reduce using rule 82
	'&&'           reduce using rule 82
	'('            reduce using rule 82
	')'            reduce using rule 82
	'*'            reduce using rule 82
	'+'            reduce using rule 82
	','            reduce using rule 82
	'-'            reduce using rule 82
	'..'           reduce using rule 82
	'/'            reduce using rule 82
	':'            reduce using rule 82
	';'            reduce using rule 82
	'<'            reduce using rule 82
	'<='           reduce using rule 82
	'=='           reduce using rule 82
	'>'            reduce using rule 82
	'>='           reduce using rule 82
	'?'            reduce using rule 82
	'{'            reduce using rule 82
	'||'           reduce using rule 82


State 86

	Expr5 -> NotOp Expr6 .                              (rule 83)

	'!='           reduce using rule 83
	'%'            reduce using rule 83
	'&&'           reduce using rule 83
	'('            reduce using rule 83
	')'            reduce using rule 83
	'*'            reduce using rule 83
	'+'            reduce using rule 83
	','            reduce using rule 83
	'-'            reduce using rule 83
	'..'           reduce using rule 83
	'/'            reduce using rule 83
	':'            reduce using rule 83
	';'            reduce using rule 83
	'<'            reduce using rule 83
	'<='           reduce using rule 83
	'=='           reduce using rule 83
	'>'            reduce using rule 83
	'>='           reduce using rule 83
	'?'            reduce using rule 83
	'{'            reduce using rule 83
	'||'           reduce using rule 83


State 87

	Instr -> Decl ';' .                                 (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'fun'          reduce using rule 22
	'if'           reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'unit'         reduce using rule 22
	'val'          reduce using rule 22
	'var'          reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'|'            reduce using rule 22
	'||'           reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22
	%eof           reduce using rule 22


State 88

	ListInstr -> Instr ListInstr .                      (rule 41)

	'}'            reduce using rule 41
	%eof           reduce using rule 41


State 89

	Instr -> Ident '++' . ';'                           (rule 8)

	';'            shift, and enter state 94


State 90

	Instr -> Ident '--' . ';'                           (rule 9)

	';'            shift, and enter state 93


State 91

	Instr -> Ident '=' . Expr ';'                       (rule 10)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 92

State 92

	Instr -> Ident '=' Expr . ';'                       (rule 10)

	';'            shift, and enter state 141


State 93

	Instr -> Ident '--' ';' .                           (rule 9)

	'!'            reduce using rule 9
	'('            reduce using rule 9
	'-'            reduce using rule 9
	';'            reduce using rule 9
	'break'        reduce using rule 9
	'continue'     reduce using rule 9
	'false'        reduce using rule 9
	'for'          reduce using rule 9
	'fun'          reduce using rule 9
	'if'           reduce using rule 9
	'return'       reduce using rule 9
	'true'         reduce using rule 9
	'unit'         reduce using rule 9
	'val'          reduce using rule 9
	'var'          reduce using rule 9
	'while'        reduce using rule 9
	'{'            reduce using rule 9
	'|'            reduce using rule 9
	'||'           reduce using rule 9
	'}'            reduce using rule 9
	L_Ident        reduce using rule 9
	L_integ        reduce using rule 9
	L_quoted       reduce using rule 9
	%eof           reduce using rule 9


State 94

	Instr -> Ident '++' ';' .                           (rule 8)

	'!'            reduce using rule 8
	'('            reduce using rule 8
	'-'            reduce using rule 8
	';'            reduce using rule 8
	'break'        reduce using rule 8
	'continue'     reduce using rule 8
	'false'        reduce using rule 8
	'for'          reduce using rule 8
	'fun'          reduce using rule 8
	'if'           reduce using rule 8
	'return'       reduce using rule 8
	'true'         reduce using rule 8
	'unit'         reduce using rule 8
	'val'          reduce using rule 8
	'var'          reduce using rule 8
	'while'        reduce using rule 8
	'{'            reduce using rule 8
	'|'            reduce using rule 8
	'||'           reduce using rule 8
	'}'            reduce using rule 8
	L_Ident        reduce using rule 8
	L_integ        reduce using rule 8
	L_quoted       reduce using rule 8
	%eof           reduce using rule 8


State 95

	ListExpr -> Expr .                                  (rule 99)
	ListExpr -> Expr . ',' ListExpr                     (rule 100)

	')'            reduce using rule 99
	','            shift, and enter state 140


State 96

	Expr5 -> Expr5 '(' ListExpr . ')'                   (rule 79)

	')'            shift, and enter state 139


State 97

	Expr5 -> Expr5 . '(' ListExpr ')'                   (rule 79)
	Expr4 -> Expr4 MulOp Expr5 .                        (rule 85)

	'!='           reduce using rule 85
	'%'            reduce using rule 85
	'&&'           reduce using rule 85
	'('            shift, and enter state 84
	')'            reduce using rule 85
	'*'            reduce using rule 85
	'+'            reduce using rule 85
	','            reduce using rule 85
	'-'            reduce using rule 85
	'..'           reduce using rule 85
	'/'            reduce using rule 85
	':'            reduce using rule 85
	';'            reduce using rule 85
	'<'            reduce using rule 85
	'<='           reduce using rule 85
	'=='           reduce using rule 85
	'>'            reduce using rule 85
	'>='           reduce using rule 85
	'?'            reduce using rule 85
	'{'            reduce using rule 85
	'||'           reduce using rule 85


State 98

	Expr4 -> Expr4 . MulOp Expr5                        (rule 85)
	Expr3 -> Expr3 PlsOp Expr4 .                        (rule 87)

	'!='           reduce using rule 87
	'%'            shift, and enter state 81
	'&&'           reduce using rule 87
	')'            reduce using rule 87
	'*'            shift, and enter state 82
	'+'            reduce using rule 87
	','            reduce using rule 87
	'-'            reduce using rule 87
	'..'           reduce using rule 87
	'/'            shift, and enter state 83
	':'            reduce using rule 87
	';'            reduce using rule 87
	'<'            reduce using rule 87
	'<='           reduce using rule 87
	'=='           reduce using rule 87
	'>'            reduce using rule 87
	'>='           reduce using rule 87
	'?'            reduce using rule 87
	'{'            reduce using rule 87
	'||'           reduce using rule 87

	MulOp          goto state 80

State 99

	Expr3 -> Expr3 . PlsOp Expr4                        (rule 87)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 89)

	'!='           reduce using rule 89
	'&&'           reduce using rule 89
	')'            reduce using rule 89
	'+'            shift, and enter state 78
	','            reduce using rule 89
	'-'            shift, and enter state 79
	'..'           reduce using rule 89
	':'            reduce using rule 89
	';'            reduce using rule 89
	'<'            reduce using rule 89
	'<='           reduce using rule 89
	'=='           reduce using rule 89
	'>'            reduce using rule 89
	'>='           reduce using rule 89
	'?'            reduce using rule 89
	'{'            reduce using rule 89
	'||'           reduce using rule 89

	PlsOp          goto state 77

State 100

	Expr1 -> Expr2 AndOp Expr1 .                        (rule 91)

	')'            reduce using rule 91
	','            reduce using rule 91
	'..'           reduce using rule 91
	':'            reduce using rule 91
	';'            reduce using rule 91
	'?'            reduce using rule 91
	'{'            reduce using rule 91
	'||'           reduce using rule 91


State 101

	Expr -> Expr1 '?' Expr1 . ':' Expr                  (rule 94)

	':'            shift, and enter state 138


State 102

	Expr -> Expr1 OrOp Expr .                           (rule 93)

	')'            reduce using rule 93
	','            reduce using rule 93
	'..'           reduce using rule 93
	';'            reduce using rule 93
	'{'            reduce using rule 93


State 103

	Expr6 -> '(' Expr ')' .                             (rule 78)

	'!='           reduce using rule 78
	'%'            reduce using rule 78
	'&&'           reduce using rule 78
	'('            reduce using rule 78
	')'            reduce using rule 78
	'*'            reduce using rule 78
	'+'            reduce using rule 78
	','            reduce using rule 78
	'-'            reduce using rule 78
	'..'           reduce using rule 78
	'/'            reduce using rule 78
	':'            reduce using rule 78
	';'            reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'=='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	'?'            reduce using rule 78
	'{'            reduce using rule 78
	'||'           reduce using rule 78


State 104

	Instr -> 'for' Ident '=' . Expr '..' Expr Block     (rule 20)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 137

State 105

	Instr -> 'fun' Ident '(' . ListArg ')' ':' Type Block    (rule 5)
	Instr -> 'fun' Ident '(' . ListArg ')' Block        (rule 6)

	')'            reduce using rule 28
	'val'          shift, and enter state 48
	'var'          shift, and enter state 49

	Arg            goto state 46
	ListArg        goto state 136

State 106

	Instr -> 'if' Expr Block .                          (rule 15)
	Instr -> 'if' Expr Block . ListElif                 (rule 16)
	Instr -> 'if' Expr Block . ListElif 'else' Block    (rule 17)

	'!'            reduce using rule 43
			(reduce using rule 15)

	'('            reduce using rule 43
			(reduce using rule 15)

	'-'            reduce using rule 43
			(reduce using rule 15)

	';'            reduce using rule 43
			(reduce using rule 15)

	'break'        reduce using rule 43
			(reduce using rule 15)

	'continue'     reduce using rule 43
			(reduce using rule 15)

	'elif'         shift, and enter state 135
	'else'         reduce using rule 43
	'false'        reduce using rule 43
			(reduce using rule 15)

	'for'          reduce using rule 43
			(reduce using rule 15)

	'fun'          reduce using rule 43
			(reduce using rule 15)

	'if'           reduce using rule 43
			(reduce using rule 15)

	'return'       reduce using rule 43
			(reduce using rule 15)

	'true'         reduce using rule 43
			(reduce using rule 15)

	'unit'         reduce using rule 43
			(reduce using rule 15)

	'val'          reduce using rule 43
			(reduce using rule 15)

	'var'          reduce using rule 43
			(reduce using rule 15)

	'while'        reduce using rule 43
			(reduce using rule 15)

	'{'            reduce using rule 43
			(reduce using rule 15)

	'|'            reduce using rule 43
			(reduce using rule 15)

	'||'           reduce using rule 43
			(reduce using rule 15)

	'}'            reduce using rule 43
			(reduce using rule 15)

	L_Ident        reduce using rule 43
			(reduce using rule 15)

	L_integ        reduce using rule 43
			(reduce using rule 15)

	L_quoted       reduce using rule 43
			(reduce using rule 15)

	%eof           reduce using rule 43
			(reduce using rule 15)


	Elif           goto state 133
	ListElif       goto state 134

State 107

	Instr -> 'return' Expr ';' .                        (rule 11)

	'!'            reduce using rule 11
	'('            reduce using rule 11
	'-'            reduce using rule 11
	';'            reduce using rule 11
	'break'        reduce using rule 11
	'continue'     reduce using rule 11
	'false'        reduce using rule 11
	'for'          reduce using rule 11
	'fun'          reduce using rule 11
	'if'           reduce using rule 11
	'return'       reduce using rule 11
	'true'         reduce using rule 11
	'unit'         reduce using rule 11
	'val'          reduce using rule 11
	'var'          reduce using rule 11
	'while'        reduce using rule 11
	'{'            reduce using rule 11
	'|'            reduce using rule 11
	'||'           reduce using rule 11
	'}'            reduce using rule 11
	L_Ident        reduce using rule 11
	L_integ        reduce using rule 11
	L_quoted       reduce using rule 11
	%eof           reduce using rule 11


State 108

	ListItem -> Item ',' . ListItem                     (rule 36)

	';'            reduce using rule 34
	L_Ident        shift, and enter state 2

	Ident          goto state 52
	Item           goto state 53
	ListItem       goto state 132

State 109

	Item -> Ident ':' . Type '=' Expr                   (rule 31)
	Item -> Ident ':' . Type                            (rule 33)

	'('            shift, and enter state 127
	'Boolean'      shift, and enter state 128
	'Integer'      shift, and enter state 129
	'String'       shift, and enter state 130
	'Unit'         shift, and enter state 131

	Type           goto state 126

State 110

	Item -> Ident '=' . Expr                            (rule 32)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 125

State 111

	Instr -> 'while' Expr Block .                       (rule 18)
	Instr -> 'while' Expr Block . 'finally' Block       (rule 19)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'false'        reduce using rule 18
	'finally'      shift, and enter state 124
	'for'          reduce using rule 18
	'fun'          reduce using rule 18
	'if'           reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'unit'         reduce using rule 18
	'val'          reduce using rule 18
	'var'          reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'|'            reduce using rule 18
	'||'           reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	%eof           reduce using rule 18


State 112

	Block -> '{' ListInstr '}' .                        (rule 39)

	'!'            reduce using rule 39
	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'..'           reduce using rule 39
	'/'            reduce using rule 39
	':'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'?'            reduce using rule 39
	'break'        reduce using rule 39
	'continue'     reduce using rule 39
	'elif'         reduce using rule 39
	'else'         reduce using rule 39
	'false'        reduce using rule 39
	'finally'      reduce using rule 39
	'for'          reduce using rule 39
	'fun'          reduce using rule 39
	'if'           reduce using rule 39
	'return'       reduce using rule 39
	'true'         reduce using rule 39
	'unit'         reduce using rule 39
	'val'          reduce using rule 39
	'var'          reduce using rule 39
	'while'        reduce using rule 39
	'{'            reduce using rule 39
	'|'            reduce using rule 39
	'||'           reduce using rule 39
	'}'            reduce using rule 39
	L_Ident        reduce using rule 39
	L_integ        reduce using rule 39
	L_quoted       reduce using rule 39
	%eof           reduce using rule 39


State 113

	Arg -> 'var' Ident . ':' Type                       (rule 24)
	Arg -> 'var' Ident . ':' 'new' Type                 (rule 26)

	':'            shift, and enter state 123


State 114

	Arg -> 'val' Ident . ':' Type                       (rule 25)
	Arg -> 'val' Ident . ':' 'new' Type                 (rule 27)

	':'            shift, and enter state 122


State 115

	Expr5 -> '|' ListArg '|' . Block                    (rule 80)
	Expr -> '|' ListArg '|' . Expr1                     (rule 95)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'{'            shift, and enter state 36
	'|'            shift, and enter state 44
	'||'           shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	Block          goto state 120
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 121

State 116

	ListArg -> Arg ',' . ListArg                        (rule 30)

	')'            reduce using rule 28
	'val'          shift, and enter state 48
	'var'          shift, and enter state 49
	'|'            reduce using rule 28

	Arg            goto state 46
	ListArg        goto state 119

State 117

	Expr5 -> '|' ListArg . '|' Block                    (rule 80)

	'|'            shift, and enter state 118


State 118

	Expr5 -> '|' ListArg '|' . Block                    (rule 80)

	'{'            shift, and enter state 36

	Block          goto state 120

State 119

	ListArg -> Arg ',' ListArg .                        (rule 30)

	')'            reduce using rule 30
	'|'            reduce using rule 30


State 120

	Expr5 -> '|' ListArg '|' Block .                    (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	'('            reduce using rule 80
	')'            reduce using rule 80
	'*'            reduce using rule 80
	'+'            reduce using rule 80
	','            reduce using rule 80
	'-'            reduce using rule 80
	'..'           reduce using rule 80
	'/'            reduce using rule 80
	':'            reduce using rule 80
	';'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'?'            reduce using rule 80
	'{'            reduce using rule 80
	'||'           reduce using rule 80


State 121

	Expr -> '|' ListArg '|' Expr1 .                     (rule 95)

	')'            reduce using rule 95
	','            reduce using rule 95
	'..'           reduce using rule 95
	';'            reduce using rule 95
	'{'            reduce using rule 95


State 122

	Arg -> 'val' Ident ':' . Type                       (rule 25)
	Arg -> 'val' Ident ':' . 'new' Type                 (rule 27)

	'('            shift, and enter state 127
	'Boolean'      shift, and enter state 128
	'Integer'      shift, and enter state 129
	'String'       shift, and enter state 130
	'Unit'         shift, and enter state 131
	'new'          shift, and enter state 158

	Type           goto state 157

State 123

	Arg -> 'var' Ident ':' . Type                       (rule 24)
	Arg -> 'var' Ident ':' . 'new' Type                 (rule 26)

	'('            shift, and enter state 127
	'Boolean'      shift, and enter state 128
	'Integer'      shift, and enter state 129
	'String'       shift, and enter state 130
	'Unit'         shift, and enter state 131
	'new'          shift, and enter state 156

	Type           goto state 155

State 124

	Instr -> 'while' Expr Block 'finally' . Block       (rule 19)

	'{'            shift, and enter state 36

	Block          goto state 154

State 125

	Item -> Ident '=' Expr .                            (rule 32)

	','            reduce using rule 32
	';'            reduce using rule 32


State 126

	Item -> Ident ':' Type . '=' Expr                   (rule 31)
	Item -> Ident ':' Type .                            (rule 33)

	','            reduce using rule 33
	';'            reduce using rule 33
	'='            shift, and enter state 153


State 127

	Type -> '(' . ListTArg ')' '->' Type                (rule 49)

	')'            reduce using rule 54
	'val'          shift, and enter state 151
	'var'          shift, and enter state 152

	TArg           goto state 149
	ListTArg       goto state 150

State 128

	Type -> 'Boolean' .                                 (rule 46)

	')'            reduce using rule 46
	','            reduce using rule 46
	';'            reduce using rule 46
	'='            reduce using rule 46
	'{'            reduce using rule 46
	'|'            reduce using rule 46


State 129

	Type -> 'Integer' .                                 (rule 45)

	')'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	'='            reduce using rule 45
	'{'            reduce using rule 45
	'|'            reduce using rule 45


State 130

	Type -> 'String' .                                  (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47
	';'            reduce using rule 47
	'='            reduce using rule 47
	'{'            reduce using rule 47
	'|'            reduce using rule 47


State 131

	Type -> 'Unit' .                                    (rule 48)

	')'            reduce using rule 48
	','            reduce using rule 48
	';'            reduce using rule 48
	'='            reduce using rule 48
	'{'            reduce using rule 48
	'|'            reduce using rule 48


State 132

	ListItem -> Item ',' ListItem .                     (rule 36)

	';'            reduce using rule 36


State 133

	ListElif -> Elif . ListElif                         (rule 44)

	'!'            reduce using rule 43
	'('            reduce using rule 43
	'-'            reduce using rule 43
	';'            reduce using rule 43
	'break'        reduce using rule 43
	'continue'     reduce using rule 43
	'elif'         shift, and enter state 135
	'else'         reduce using rule 43
	'false'        reduce using rule 43
	'for'          reduce using rule 43
	'fun'          reduce using rule 43
	'if'           reduce using rule 43
	'return'       reduce using rule 43
	'true'         reduce using rule 43
	'unit'         reduce using rule 43
	'val'          reduce using rule 43
	'var'          reduce using rule 43
	'while'        reduce using rule 43
	'{'            reduce using rule 43
	'|'            reduce using rule 43
	'||'           reduce using rule 43
	'}'            reduce using rule 43
	L_Ident        reduce using rule 43
	L_integ        reduce using rule 43
	L_quoted       reduce using rule 43
	%eof           reduce using rule 43

	Elif           goto state 133
	ListElif       goto state 148

State 134

	Instr -> 'if' Expr Block ListElif .                 (rule 16)
	Instr -> 'if' Expr Block ListElif . 'else' Block    (rule 17)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'break'        reduce using rule 16
	'continue'     reduce using rule 16
	'else'         shift, and enter state 147
	'false'        reduce using rule 16
	'for'          reduce using rule 16
	'fun'          reduce using rule 16
	'if'           reduce using rule 16
	'return'       reduce using rule 16
	'true'         reduce using rule 16
	'unit'         reduce using rule 16
	'val'          reduce using rule 16
	'var'          reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'|'            reduce using rule 16
	'||'           reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16
	%eof           reduce using rule 16


State 135

	Elif -> 'elif' . Expr Block                         (rule 42)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 146

State 136

	Instr -> 'fun' Ident '(' ListArg . ')' ':' Type Block    (rule 5)
	Instr -> 'fun' Ident '(' ListArg . ')' Block        (rule 6)

	')'            shift, and enter state 145


State 137

	Instr -> 'for' Ident '=' Expr . '..' Expr Block     (rule 20)

	'..'           shift, and enter state 144


State 138

	Expr -> Expr1 '?' Expr1 ':' . Expr                  (rule 94)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 143

State 139

	Expr5 -> Expr5 '(' ListExpr ')' .                   (rule 79)

	'!='           reduce using rule 79
	'%'            reduce using rule 79
	'&&'           reduce using rule 79
	'('            reduce using rule 79
	')'            reduce using rule 79
	'*'            reduce using rule 79
	'+'            reduce using rule 79
	','            reduce using rule 79
	'-'            reduce using rule 79
	'..'           reduce using rule 79
	'/'            reduce using rule 79
	':'            reduce using rule 79
	';'            reduce using rule 79
	'<'            reduce using rule 79
	'<='           reduce using rule 79
	'=='           reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	'?'            reduce using rule 79
	'{'            reduce using rule 79
	'||'           reduce using rule 79


State 140

	ListExpr -> Expr ',' . ListExpr                     (rule 100)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	')'            reduce using rule 98
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 95
	ListExpr       goto state 142

State 141

	Instr -> Ident '=' Expr ';' .                       (rule 10)

	'!'            reduce using rule 10
	'('            reduce using rule 10
	'-'            reduce using rule 10
	';'            reduce using rule 10
	'break'        reduce using rule 10
	'continue'     reduce using rule 10
	'false'        reduce using rule 10
	'for'          reduce using rule 10
	'fun'          reduce using rule 10
	'if'           reduce using rule 10
	'return'       reduce using rule 10
	'true'         reduce using rule 10
	'unit'         reduce using rule 10
	'val'          reduce using rule 10
	'var'          reduce using rule 10
	'while'        reduce using rule 10
	'{'            reduce using rule 10
	'|'            reduce using rule 10
	'||'           reduce using rule 10
	'}'            reduce using rule 10
	L_Ident        reduce using rule 10
	L_integ        reduce using rule 10
	L_quoted       reduce using rule 10
	%eof           reduce using rule 10


State 142

	ListExpr -> Expr ',' ListExpr .                     (rule 100)

	')'            reduce using rule 100


State 143

	Expr -> Expr1 '?' Expr1 ':' Expr .                  (rule 94)

	')'            reduce using rule 94
	','            reduce using rule 94
	'..'           reduce using rule 94
	';'            reduce using rule 94
	'{'            reduce using rule 94


State 144

	Instr -> 'for' Ident '=' Expr '..' . Expr Block     (rule 20)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 172

State 145

	Instr -> 'fun' Ident '(' ListArg ')' . ':' Type Block    (rule 5)
	Instr -> 'fun' Ident '(' ListArg ')' . Block        (rule 6)

	':'            shift, and enter state 171
	'{'            shift, and enter state 36

	Block          goto state 170

State 146

	Elif -> 'elif' Expr . Block                         (rule 42)

	'{'            shift, and enter state 36

	Block          goto state 169

State 147

	Instr -> 'if' Expr Block ListElif 'else' . Block    (rule 17)

	'{'            shift, and enter state 36

	Block          goto state 168

State 148

	ListElif -> Elif ListElif .                         (rule 44)

	'!'            reduce using rule 44
	'('            reduce using rule 44
	'-'            reduce using rule 44
	';'            reduce using rule 44
	'break'        reduce using rule 44
	'continue'     reduce using rule 44
	'else'         reduce using rule 44
	'false'        reduce using rule 44
	'for'          reduce using rule 44
	'fun'          reduce using rule 44
	'if'           reduce using rule 44
	'return'       reduce using rule 44
	'true'         reduce using rule 44
	'unit'         reduce using rule 44
	'val'          reduce using rule 44
	'var'          reduce using rule 44
	'while'        reduce using rule 44
	'{'            reduce using rule 44
	'|'            reduce using rule 44
	'||'           reduce using rule 44
	'}'            reduce using rule 44
	L_Ident        reduce using rule 44
	L_integ        reduce using rule 44
	L_quoted       reduce using rule 44
	%eof           reduce using rule 44


State 149

	ListTArg -> TArg .                                  (rule 55)
	ListTArg -> TArg . ',' ListTArg                     (rule 56)

	')'            reduce using rule 55
	','            shift, and enter state 167


State 150

	Type -> '(' ListTArg . ')' '->' Type                (rule 49)

	')'            shift, and enter state 166


State 151

	TArg -> 'val' . Type                                (rule 51)
	TArg -> 'val' . '$' Type                            (rule 53)

	'$'            shift, and enter state 165
	'('            shift, and enter state 127
	'Boolean'      shift, and enter state 128
	'Integer'      shift, and enter state 129
	'String'       shift, and enter state 130
	'Unit'         shift, and enter state 131

	Type           goto state 164

State 152

	TArg -> 'var' . Type                                (rule 50)
	TArg -> 'var' . '$' Type                            (rule 52)

	'$'            shift, and enter state 163
	'('            shift, and enter state 127
	'Boolean'      shift, and enter state 128
	'Integer'      shift, and enter state 129
	'String'       shift, and enter state 130
	'Unit'         shift, and enter state 131

	Type           goto state 162

State 153

	Item -> Ident ':' Type '=' . Expr                   (rule 31)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'unit'         shift, and enter state 32
	'|'            shift, and enter state 37
	'||'           shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 41
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 161

State 154

	Instr -> 'while' Expr Block 'finally' Block .       (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'fun'          reduce using rule 19
	'if'           reduce using rule 19
	'return'       reduce using rule 19
	'true'         reduce using rule 19
	'unit'         reduce using rule 19
	'val'          reduce using rule 19
	'var'          reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'|'            reduce using rule 19
	'||'           reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19
	%eof           reduce using rule 19


State 155

	Arg -> 'var' Ident ':' Type .                       (rule 24)

	')'            reduce using rule 24
	','            reduce using rule 24
	'|'            reduce using rule 24


State 156

	Arg -> 'var' Ident ':' 'new' . Type                 (rule 26)

	'('            shift, and enter state 127
	'Boolean'      shift, and enter state 128
	'Integer'      shift, and enter state 129
	'String'       shift, and enter state 130
	'Unit'         shift, and enter state 131

	Type           goto state 160

State 157

	Arg -> 'val' Ident ':' Type .                       (rule 25)

	')'            reduce using rule 25
	','            reduce using rule 25
	'|'            reduce using rule 25


State 158

	Arg -> 'val' Ident ':' 'new' . Type                 (rule 27)

	'('            shift, and enter state 127
	'Boolean'      shift, and enter state 128
	'Integer'      shift, and enter state 129
	'String'       shift, and enter state 130
	'Unit'         shift, and enter state 131

	Type           goto state 159

State 159

	Arg -> 'val' Ident ':' 'new' Type .                 (rule 27)

	')'            reduce using rule 27
	','            reduce using rule 27
	'|'            reduce using rule 27


State 160

	Arg -> 'var' Ident ':' 'new' Type .                 (rule 26)

	')'            reduce using rule 26
	','            reduce using rule 26
	'|'            reduce using rule 26


State 161

	Item -> Ident ':' Type '=' Expr .                   (rule 31)

	','            reduce using rule 31
	';'            reduce using rule 31


State 162

	TArg -> 'var' Type .                                (rule 50)

	')'            reduce using rule 50
	','            reduce using rule 50


State 163

	TArg -> 'var' '$' . Type                            (rule 52)

	'('            shift, and enter state 127
	'Boolean'      shift, and enter state 128
	'Integer'      shift, and enter state 129
	'String'       shift, and enter state 130
	'Unit'         shift, and enter state 131

	Type           goto state 178

State 164

	TArg -> 'val' Type .                                (rule 51)

	')'            reduce using rule 51
	','            reduce using rule 51


State 165

	TArg -> 'val' '$' . Type                            (rule 53)

	'('            shift, and enter state 127
	'Boolean'      shift, and enter state 128
	'Integer'      shift, and enter state 129
	'String'       shift, and enter state 130
	'Unit'         shift, and enter state 131

	Type           goto state 177

State 166

	Type -> '(' ListTArg ')' . '->' Type                (rule 49)

	'->'           shift, and enter state 176


State 167

	ListTArg -> TArg ',' . ListTArg                     (rule 56)

	')'            reduce using rule 54
	'val'          shift, and enter state 151
	'var'          shift, and enter state 152

	TArg           goto state 149
	ListTArg       goto state 175

State 168

	Instr -> 'if' Expr Block ListElif 'else' Block .    (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'false'        reduce using rule 17
	'for'          reduce using rule 17
	'fun'          reduce using rule 17
	'if'           reduce using rule 17
	'return'       reduce using rule 17
	'true'         reduce using rule 17
	'unit'         reduce using rule 17
	'val'          reduce using rule 17
	'var'          reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'|'            reduce using rule 17
	'||'           reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17
	%eof           reduce using rule 17


State 169

	Elif -> 'elif' Expr Block .                         (rule 42)

	'!'            reduce using rule 42
	'('            reduce using rule 42
	'-'            reduce using rule 42
	';'            reduce using rule 42
	'break'        reduce using rule 42
	'continue'     reduce using rule 42
	'elif'         reduce using rule 42
	'else'         reduce using rule 42
	'false'        reduce using rule 42
	'for'          reduce using rule 42
	'fun'          reduce using rule 42
	'if'           reduce using rule 42
	'return'       reduce using rule 42
	'true'         reduce using rule 42
	'unit'         reduce using rule 42
	'val'          reduce using rule 42
	'var'          reduce using rule 42
	'while'        reduce using rule 42
	'{'            reduce using rule 42
	'|'            reduce using rule 42
	'||'           reduce using rule 42
	'}'            reduce using rule 42
	L_Ident        reduce using rule 42
	L_integ        reduce using rule 42
	L_quoted       reduce using rule 42
	%eof           reduce using rule 42


State 170

	Instr -> 'fun' Ident '(' ListArg ')' Block .        (rule 6)

	'!'            reduce using rule 6
	'('            reduce using rule 6
	'-'            reduce using rule 6
	';'            reduce using rule 6
	'break'        reduce using rule 6
	'continue'     reduce using rule 6
	'false'        reduce using rule 6
	'for'          reduce using rule 6
	'fun'          reduce using rule 6
	'if'           reduce using rule 6
	'return'       reduce using rule 6
	'true'         reduce using rule 6
	'unit'         reduce using rule 6
	'val'          reduce using rule 6
	'var'          reduce using rule 6
	'while'        reduce using rule 6
	'{'            reduce using rule 6
	'|'            reduce using rule 6
	'||'           reduce using rule 6
	'}'            reduce using rule 6
	L_Ident        reduce using rule 6
	L_integ        reduce using rule 6
	L_quoted       reduce using rule 6
	%eof           reduce using rule 6


State 171

	Instr -> 'fun' Ident '(' ListArg ')' ':' . Type Block    (rule 5)

	'('            shift, and enter state 127
	'Boolean'      shift, and enter state 128
	'Integer'      shift, and enter state 129
	'String'       shift, and enter state 130
	'Unit'         shift, and enter state 131

	Type           goto state 174

State 172

	Instr -> 'for' Ident '=' Expr '..' Expr . Block     (rule 20)

	'{'            shift, and enter state 36

	Block          goto state 173

State 173

	Instr -> 'for' Ident '=' Expr '..' Expr Block .     (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'fun'          reduce using rule 20
	'if'           reduce using rule 20
	'return'       reduce using rule 20
	'true'         reduce using rule 20
	'unit'         reduce using rule 20
	'val'          reduce using rule 20
	'var'          reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'|'            reduce using rule 20
	'||'           reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20
	%eof           reduce using rule 20


State 174

	Instr -> 'fun' Ident '(' ListArg ')' ':' Type . Block    (rule 5)

	'{'            shift, and enter state 36

	Block          goto state 180

State 175

	ListTArg -> TArg ',' ListTArg .                     (rule 56)

	')'            reduce using rule 56


State 176

	Type -> '(' ListTArg ')' '->' . Type                (rule 49)

	'('            shift, and enter state 127
	'Boolean'      shift, and enter state 128
	'Integer'      shift, and enter state 129
	'String'       shift, and enter state 130
	'Unit'         shift, and enter state 131

	Type           goto state 179

State 177

	TArg -> 'val' '$' Type .                            (rule 53)

	')'            reduce using rule 53
	','            reduce using rule 53


State 178

	TArg -> 'var' '$' Type .                            (rule 52)

	')'            reduce using rule 52
	','            reduce using rule 52


State 179

	Type -> '(' ListTArg ')' '->' Type .                (rule 49)

	')'            reduce using rule 49
	','            reduce using rule 49
	';'            reduce using rule 49
	'='            reduce using rule 49
	'{'            reduce using rule 49
	'|'            reduce using rule 49


State 180

	Instr -> 'fun' Ident '(' ListArg ')' ':' Type Block .    (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'break'        reduce using rule 5
	'continue'     reduce using rule 5
	'false'        reduce using rule 5
	'for'          reduce using rule 5
	'fun'          reduce using rule 5
	'if'           reduce using rule 5
	'return'       reduce using rule 5
	'true'         reduce using rule 5
	'unit'         reduce using rule 5
	'val'          reduce using rule 5
	'var'          reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'|'            reduce using rule 5
	'||'           reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 101
Number of terminals: 52
Number of non-terminals: 33
Number of states: 181
