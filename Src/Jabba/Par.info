-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Src/Jabba/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListInstr                               (4)
	Instr -> 'fun' Ident '(' ListArg ')' ':' Type Block   (5)
	Instr -> 'fun' Ident '(' ListArg ')' Block         (6)
	Instr -> ';'                                       (7)
	Instr -> Ident '++' ';'                            (8)
	Instr -> Ident '--' ';'                            (9)
	Instr -> Ident '=' Expr ';'                        (10)
	Instr -> 'return' Expr ';'                         (11)
	Instr -> 'return' ';'                              (12)
	Instr -> 'break' ';'                               (13)
	Instr -> 'continue' ';'                            (14)
	Instr -> 'if' Expr Block                           (15)
	Instr -> 'if' Expr Block ListElif 'else' Block     (16)
	Instr -> 'while' Expr Block                        (17)
	Instr -> 'while' Expr Block 'finally' Block        (18)
	Instr -> 'for' Ident '=' Expr '..' Expr Block      (19)
	Instr -> Expr ';'                                  (20)
	Instr -> Decl ';'                                  (21)
	Instr -> Block                                     (22)
	Arg -> 'var' Ident ':' Type                        (23)
	Arg -> 'val' Ident ':' Type                        (24)
	Arg -> 'var' Ident ':' 'new' Type                  (25)
	Arg -> 'val' Ident ':' 'new' Type                  (26)
	ListArg ->                                         (27)
	ListArg -> Arg                                     (28)
	ListArg -> Arg ',' ListArg                         (29)
	Item -> Ident ':' Type '=' Expr                    (30)
	Item -> Ident '=' Expr                             (31)
	Item -> Ident ':' Type                             (32)
	ListItem ->                                        (33)
	ListItem -> Item                                   (34)
	ListItem -> Item ',' ListItem                      (35)
	Decl -> 'var' ListItem                             (36)
	Decl -> 'val' ListItem                             (37)
	Block -> '{' ListInstr '}'                         (38)
	ListInstr ->                                       (39)
	ListInstr -> Instr ListInstr                       (40)
	Elif -> 'elif' Expr Block                          (41)
	ListElif ->                                        (42)
	ListElif -> Elif ListElif                          (43)
	Type -> 'Integer'                                  (44)
	Type -> 'Boolean'                                  (45)
	Type -> 'String'                                   (46)
	Type -> 'Unit'                                     (47)
	Type -> '(' ListTArg ')' '->' Type                 (48)
	TArg -> 'var' Type                                 (49)
	TArg -> 'val' Type                                 (50)
	TArg -> 'var' '$' Type                             (51)
	TArg -> 'val' '$' Type                             (52)
	ListTArg ->                                        (53)
	ListTArg -> TArg                                   (54)
	ListTArg -> TArg ',' ListTArg                      (55)
	PlsOp -> '+'                                       (56)
	PlsOp -> '-'                                       (57)
	MulOp -> '*'                                       (58)
	MulOp -> '/'                                       (59)
	MulOp -> '%'                                       (60)
	NotOp -> '!'                                       (61)
	NegOp -> '-'                                       (62)
	AndOp -> '&&'                                      (63)
	OrOp -> '||'                                       (64)
	RelOp -> '=='                                      (65)
	RelOp -> '!='                                      (66)
	RelOp -> '<'                                       (67)
	RelOp -> '>'                                       (68)
	RelOp -> '<='                                      (69)
	RelOp -> '>='                                      (70)
	Expr6 -> Ident                                     (71)
	Expr6 -> Integer                                   (72)
	Expr6 -> 'true'                                    (73)
	Expr6 -> 'false'                                   (74)
	Expr6 -> String                                    (75)
	Expr6 -> '(' Expr ')'                              (76)
	Expr5 -> Expr5 '(' ListExpr ')'                    (77)
	Expr5 -> '|' ListArg '|' Block                     (78)
	Expr5 -> '||' Block                                (79)
	Expr5 -> NegOp Expr6                               (80)
	Expr5 -> NotOp Expr6                               (81)
	Expr5 -> Expr6                                     (82)
	Expr4 -> Expr4 MulOp Expr5                         (83)
	Expr4 -> Expr5                                     (84)
	Expr3 -> Expr3 PlsOp Expr4                         (85)
	Expr3 -> Expr4                                     (86)
	Expr2 -> Expr2 RelOp Expr3                         (87)
	Expr2 -> Expr3                                     (88)
	Expr1 -> Expr2 AndOp Expr1                         (89)
	Expr1 -> Expr2                                     (90)
	Expr -> Expr1 OrOp Expr                            (91)
	Expr -> Expr1 '?' Expr1 ':' Expr                   (92)
	Expr -> '|' ListArg '|' Expr1                      (93)
	Expr -> '||' Expr1                                 (94)
	Expr -> Expr1                                      (95)
	ListExpr ->                                        (96)
	ListExpr -> Expr                                   (97)
	ListExpr -> Expr ',' ListExpr                      (98)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'$'            { PT _ (TS _ 3) }
	'%'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'->'           { PT _ (TS _ 14) }
	'..'           { PT _ (TS _ 15) }
	'/'            { PT _ (TS _ 16) }
	':'            { PT _ (TS _ 17) }
	';'            { PT _ (TS _ 18) }
	'<'            { PT _ (TS _ 19) }
	'<='           { PT _ (TS _ 20) }
	'='            { PT _ (TS _ 21) }
	'=='           { PT _ (TS _ 22) }
	'>'            { PT _ (TS _ 23) }
	'>='           { PT _ (TS _ 24) }
	'?'            { PT _ (TS _ 25) }
	'Boolean'      { PT _ (TS _ 26) }
	'Integer'      { PT _ (TS _ 27) }
	'String'       { PT _ (TS _ 28) }
	'Unit'         { PT _ (TS _ 29) }
	'break'        { PT _ (TS _ 30) }
	'continue'     { PT _ (TS _ 31) }
	'elif'         { PT _ (TS _ 32) }
	'else'         { PT _ (TS _ 33) }
	'false'        { PT _ (TS _ 34) }
	'finally'      { PT _ (TS _ 35) }
	'for'          { PT _ (TS _ 36) }
	'fun'          { PT _ (TS _ 37) }
	'if'           { PT _ (TS _ 38) }
	'new'          { PT _ (TS _ 39) }
	'return'       { PT _ (TS _ 40) }
	'true'         { PT _ (TS _ 41) }
	'val'          { PT _ (TS _ 42) }
	'var'          { PT _ (TS _ 43) }
	'while'        { PT _ (TS _ 44) }
	'{'            { PT _ (TS _ 45) }
	'|'            { PT _ (TS _ 46) }
	'||'           { PT _ (TS _ 47) }
	'}'            { PT _ (TS _ 48) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Instr           rules 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
	Arg             rules 23, 24, 25, 26
	ListArg         rules 27, 28, 29
	Item            rules 30, 31, 32
	ListItem        rules 33, 34, 35
	Decl            rules 36, 37
	Block           rule  38
	ListInstr       rules 39, 40
	Elif            rule  41
	ListElif        rules 42, 43
	Type            rules 44, 45, 46, 47, 48
	TArg            rules 49, 50, 51, 52
	ListTArg        rules 53, 54, 55
	PlsOp           rules 56, 57
	MulOp           rules 58, 59, 60
	NotOp           rule  61
	NegOp           rule  62
	AndOp           rule  63
	OrOp            rule  64
	RelOp           rules 65, 66, 67, 68, 69, 70
	Expr6           rules 71, 72, 73, 74, 75, 76
	Expr5           rules 77, 78, 79, 80, 81, 82
	Expr4           rules 83, 84
	Expr3           rules 85, 86
	Expr2           rules 87, 88
	Expr1           rules 89, 90
	Expr            rules 91, 92, 93, 94, 95
	ListExpr        rules 96, 97, 98

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	';'            shift, and enter state 23
	'break'        shift, and enter state 24
	'continue'     shift, and enter state 25
	'false'        shift, and enter state 26
	'for'          shift, and enter state 27
	'fun'          shift, and enter state 28
	'if'           shift, and enter state 29
	'return'       shift, and enter state 30
	'true'         shift, and enter state 31
	'val'          shift, and enter state 32
	'var'          shift, and enter state 33
	'while'        shift, and enter state 34
	'{'            shift, and enter state 35
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39
	%eof           reduce using rule 39

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Program        goto state 6
	Instr          goto state 7
	Decl           goto state 8
	Block          goto state 9
	ListInstr      goto state 10
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'..'           reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'?'            reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1


State 3

	Instr -> Ident . '++' ';'                           (rule 8)
	Instr -> Ident . '--' ';'                           (rule 9)
	Instr -> Ident . '=' Expr ';'                       (rule 10)
	Expr6 -> Ident .                                    (rule 71)

	'!='           reduce using rule 71
	'%'            reduce using rule 71
	'&&'           reduce using rule 71
	'('            reduce using rule 71
	'*'            reduce using rule 71
	'+'            reduce using rule 71
	'++'           shift, and enter state 88
	'-'            reduce using rule 71
	'--'           shift, and enter state 89
	'/'            reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'='            shift, and enter state 90
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	'?'            reduce using rule 71
	'||'           reduce using rule 71


State 4

	Expr6 -> Integer .                                  (rule 72)

	'!='           reduce using rule 72
	'%'            reduce using rule 72
	'&&'           reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'+'            reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'..'           reduce using rule 72
	'/'            reduce using rule 72
	':'            reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'?'            reduce using rule 72
	'{'            reduce using rule 72
	'||'           reduce using rule 72


State 5

	Expr6 -> String .                                   (rule 75)

	'!='           reduce using rule 75
	'%'            reduce using rule 75
	'&&'           reduce using rule 75
	'('            reduce using rule 75
	')'            reduce using rule 75
	'*'            reduce using rule 75
	'+'            reduce using rule 75
	','            reduce using rule 75
	'-'            reduce using rule 75
	'..'           reduce using rule 75
	'/'            reduce using rule 75
	':'            reduce using rule 75
	';'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	'?'            reduce using rule 75
	'{'            reduce using rule 75
	'||'           reduce using rule 75


State 6

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 7

	ListInstr -> Instr . ListInstr                      (rule 40)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	';'            shift, and enter state 23
	'break'        shift, and enter state 24
	'continue'     shift, and enter state 25
	'false'        shift, and enter state 26
	'for'          shift, and enter state 27
	'fun'          shift, and enter state 28
	'if'           shift, and enter state 29
	'return'       shift, and enter state 30
	'true'         shift, and enter state 31
	'val'          shift, and enter state 32
	'var'          shift, and enter state 33
	'while'        shift, and enter state 34
	'{'            shift, and enter state 35
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	'}'            reduce using rule 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39
	%eof           reduce using rule 39

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Instr          goto state 7
	Decl           goto state 8
	Block          goto state 9
	ListInstr      goto state 87
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 8

	Instr -> Decl . ';'                                 (rule 21)

	';'            shift, and enter state 86


State 9

	Instr -> Block .                                    (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'fun'          reduce using rule 22
	'if'           reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'val'          reduce using rule 22
	'var'          reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'|'            reduce using rule 22
	'||'           reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22
	%eof           reduce using rule 22


State 10

	Program -> ListInstr .                              (rule 4)

	%eof           reduce using rule 4


State 11

	Expr5 -> NotOp . Expr6                              (rule 81)

	'('            shift, and enter state 21
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 85

State 12

	Expr5 -> NegOp . Expr6                              (rule 80)

	'('            shift, and enter state 21
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 84

State 13

	Expr5 -> Expr6 .                                    (rule 82)

	'!='           reduce using rule 82
	'%'            reduce using rule 82
	'&&'           reduce using rule 82
	'('            reduce using rule 82
	')'            reduce using rule 82
	'*'            reduce using rule 82
	'+'            reduce using rule 82
	','            reduce using rule 82
	'-'            reduce using rule 82
	'..'           reduce using rule 82
	'/'            reduce using rule 82
	':'            reduce using rule 82
	';'            reduce using rule 82
	'<'            reduce using rule 82
	'<='           reduce using rule 82
	'=='           reduce using rule 82
	'>'            reduce using rule 82
	'>='           reduce using rule 82
	'?'            reduce using rule 82
	'{'            reduce using rule 82
	'||'           reduce using rule 82


State 14

	Expr5 -> Expr5 . '(' ListExpr ')'                   (rule 77)
	Expr4 -> Expr5 .                                    (rule 84)

	'!='           reduce using rule 84
	'%'            reduce using rule 84
	'&&'           reduce using rule 84
	'('            shift, and enter state 83
	')'            reduce using rule 84
	'*'            reduce using rule 84
	'+'            reduce using rule 84
	','            reduce using rule 84
	'-'            reduce using rule 84
	'..'           reduce using rule 84
	'/'            reduce using rule 84
	':'            reduce using rule 84
	';'            reduce using rule 84
	'<'            reduce using rule 84
	'<='           reduce using rule 84
	'=='           reduce using rule 84
	'>'            reduce using rule 84
	'>='           reduce using rule 84
	'?'            reduce using rule 84
	'{'            reduce using rule 84
	'||'           reduce using rule 84


State 15

	Expr4 -> Expr4 . MulOp Expr5                        (rule 83)
	Expr3 -> Expr4 .                                    (rule 86)

	'!='           reduce using rule 86
	'%'            shift, and enter state 80
	'&&'           reduce using rule 86
	')'            reduce using rule 86
	'*'            shift, and enter state 81
	'+'            reduce using rule 86
	','            reduce using rule 86
	'-'            reduce using rule 86
	'..'           reduce using rule 86
	'/'            shift, and enter state 82
	':'            reduce using rule 86
	';'            reduce using rule 86
	'<'            reduce using rule 86
	'<='           reduce using rule 86
	'=='           reduce using rule 86
	'>'            reduce using rule 86
	'>='           reduce using rule 86
	'?'            reduce using rule 86
	'{'            reduce using rule 86
	'||'           reduce using rule 86

	MulOp          goto state 79

State 16

	Expr3 -> Expr3 . PlsOp Expr4                        (rule 85)
	Expr2 -> Expr3 .                                    (rule 88)

	'!='           reduce using rule 88
	'&&'           reduce using rule 88
	')'            reduce using rule 88
	'+'            shift, and enter state 77
	','            reduce using rule 88
	'-'            shift, and enter state 78
	'..'           reduce using rule 88
	':'            reduce using rule 88
	';'            reduce using rule 88
	'<'            reduce using rule 88
	'<='           reduce using rule 88
	'=='           reduce using rule 88
	'>'            reduce using rule 88
	'>='           reduce using rule 88
	'?'            reduce using rule 88
	'{'            reduce using rule 88
	'||'           reduce using rule 88

	PlsOp          goto state 76

State 17

	Expr2 -> Expr2 . RelOp Expr3                        (rule 87)
	Expr1 -> Expr2 . AndOp Expr1                        (rule 89)
	Expr1 -> Expr2 .                                    (rule 90)

	'!='           shift, and enter state 69
	'&&'           shift, and enter state 70
	')'            reduce using rule 90
	','            reduce using rule 90
	'..'           reduce using rule 90
	':'            reduce using rule 90
	';'            reduce using rule 90
	'<'            shift, and enter state 71
	'<='           shift, and enter state 72
	'=='           shift, and enter state 73
	'>'            shift, and enter state 74
	'>='           shift, and enter state 75
	'?'            reduce using rule 90
	'{'            reduce using rule 90
	'||'           reduce using rule 90

	AndOp          goto state 67
	RelOp          goto state 68

State 18

	Expr -> Expr1 . OrOp Expr                           (rule 91)
	Expr -> Expr1 . '?' Expr1 ':' Expr                  (rule 92)
	Expr -> Expr1 .                                     (rule 95)

	')'            reduce using rule 95
	','            reduce using rule 95
	'..'           reduce using rule 95
	';'            reduce using rule 95
	'?'            shift, and enter state 65
	'{'            reduce using rule 95
	'||'           shift, and enter state 66

	OrOp           goto state 64

State 19

	Instr -> Expr . ';'                                 (rule 20)

	';'            shift, and enter state 63


State 20

	NotOp -> '!' .                                      (rule 61)

	'('            reduce using rule 61
	'false'        reduce using rule 61
	'true'         reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 21

	Expr6 -> '(' . Expr ')'                             (rule 76)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 62

State 22

	NegOp -> '-' .                                      (rule 62)

	'('            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 23

	Instr -> ';' .                                      (rule 7)

	'!'            reduce using rule 7
	'('            reduce using rule 7
	'-'            reduce using rule 7
	';'            reduce using rule 7
	'break'        reduce using rule 7
	'continue'     reduce using rule 7
	'false'        reduce using rule 7
	'for'          reduce using rule 7
	'fun'          reduce using rule 7
	'if'           reduce using rule 7
	'return'       reduce using rule 7
	'true'         reduce using rule 7
	'val'          reduce using rule 7
	'var'          reduce using rule 7
	'while'        reduce using rule 7
	'{'            reduce using rule 7
	'|'            reduce using rule 7
	'||'           reduce using rule 7
	'}'            reduce using rule 7
	L_Ident        reduce using rule 7
	L_integ        reduce using rule 7
	L_quoted       reduce using rule 7
	%eof           reduce using rule 7


State 24

	Instr -> 'break' . ';'                              (rule 13)

	';'            shift, and enter state 61


State 25

	Instr -> 'continue' . ';'                           (rule 14)

	';'            shift, and enter state 60


State 26

	Expr6 -> 'false' .                                  (rule 74)

	'!='           reduce using rule 74
	'%'            reduce using rule 74
	'&&'           reduce using rule 74
	'('            reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'+'            reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'..'           reduce using rule 74
	'/'            reduce using rule 74
	':'            reduce using rule 74
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	'?'            reduce using rule 74
	'{'            reduce using rule 74
	'||'           reduce using rule 74


State 27

	Instr -> 'for' . Ident '=' Expr '..' Expr Block     (rule 19)

	L_Ident        shift, and enter state 2

	Ident          goto state 59

State 28

	Instr -> 'fun' . Ident '(' ListArg ')' ':' Type Block    (rule 5)
	Instr -> 'fun' . Ident '(' ListArg ')' Block        (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 58

State 29

	Instr -> 'if' . Expr Block                          (rule 15)
	Instr -> 'if' . Expr Block ListElif 'else' Block    (rule 16)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 57

State 30

	Instr -> 'return' . Expr ';'                        (rule 11)
	Instr -> 'return' . ';'                             (rule 12)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	';'            shift, and enter state 56
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 55

State 31

	Expr6 -> 'true' .                                   (rule 73)

	'!='           reduce using rule 73
	'%'            reduce using rule 73
	'&&'           reduce using rule 73
	'('            reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'+'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'..'           reduce using rule 73
	'/'            reduce using rule 73
	':'            reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	'?'            reduce using rule 73
	'{'            reduce using rule 73
	'||'           reduce using rule 73


State 32

	Decl -> 'val' . ListItem                            (rule 37)

	';'            reduce using rule 33
	L_Ident        shift, and enter state 2

	Ident          goto state 51
	Item           goto state 52
	ListItem       goto state 54

State 33

	Decl -> 'var' . ListItem                            (rule 36)

	';'            reduce using rule 33
	L_Ident        shift, and enter state 2

	Ident          goto state 51
	Item           goto state 52
	ListItem       goto state 53

State 34

	Instr -> 'while' . Expr Block                       (rule 17)
	Instr -> 'while' . Expr Block 'finally' Block       (rule 18)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 50

State 35

	Block -> '{' . ListInstr '}'                        (rule 38)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	';'            shift, and enter state 23
	'break'        shift, and enter state 24
	'continue'     shift, and enter state 25
	'false'        shift, and enter state 26
	'for'          shift, and enter state 27
	'fun'          shift, and enter state 28
	'if'           shift, and enter state 29
	'return'       shift, and enter state 30
	'true'         shift, and enter state 31
	'val'          shift, and enter state 32
	'var'          shift, and enter state 33
	'while'        shift, and enter state 34
	'{'            shift, and enter state 35
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	'}'            reduce using rule 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Instr          goto state 7
	Decl           goto state 8
	Block          goto state 9
	ListInstr      goto state 49
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 36

	Expr5 -> '|' . ListArg '|' Block                    (rule 78)
	Expr -> '|' . ListArg '|' Expr1                     (rule 93)

	'val'          shift, and enter state 47
	'var'          shift, and enter state 48
	'|'            reduce using rule 27

	Arg            goto state 45
	ListArg        goto state 46

State 37

	Expr5 -> '||' . Block                               (rule 79)
	Expr -> '||' . Expr1                                (rule 94)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'{'            shift, and enter state 35
	'|'            shift, and enter state 43
	'||'           shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	Block          goto state 41
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 42

State 38

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'..'           reduce using rule 2
	'/'            reduce using rule 2
	':'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'?'            reduce using rule 2
	'{'            reduce using rule 2
	'||'           reduce using rule 2


State 39

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'..'           reduce using rule 3
	'/'            reduce using rule 3
	':'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'?'            reduce using rule 3
	'{'            reduce using rule 3
	'||'           reduce using rule 3


State 40

	Expr6 -> Ident .                                    (rule 71)

	'!='           reduce using rule 71
	'%'            reduce using rule 71
	'&&'           reduce using rule 71
	'('            reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	'+'            reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'..'           reduce using rule 71
	'/'            reduce using rule 71
	':'            reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	'?'            reduce using rule 71
	'{'            reduce using rule 71
	'||'           reduce using rule 71


State 41

	Expr5 -> '||' Block .                               (rule 79)

	'!='           reduce using rule 79
	'%'            reduce using rule 79
	'&&'           reduce using rule 79
	'('            reduce using rule 79
	')'            reduce using rule 79
	'*'            reduce using rule 79
	'+'            reduce using rule 79
	','            reduce using rule 79
	'-'            reduce using rule 79
	'..'           reduce using rule 79
	'/'            reduce using rule 79
	':'            reduce using rule 79
	';'            reduce using rule 79
	'<'            reduce using rule 79
	'<='           reduce using rule 79
	'=='           reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	'?'            reduce using rule 79
	'{'            reduce using rule 79
	'||'           reduce using rule 79


State 42

	Expr -> '||' Expr1 .                                (rule 94)

	')'            reduce using rule 94
	','            reduce using rule 94
	'..'           reduce using rule 94
	';'            reduce using rule 94
	'{'            reduce using rule 94


State 43

	Expr5 -> '|' . ListArg '|' Block                    (rule 78)

	'val'          shift, and enter state 47
	'var'          shift, and enter state 48
	'|'            reduce using rule 27

	Arg            goto state 45
	ListArg        goto state 116

State 44

	Expr5 -> '||' . Block                               (rule 79)

	'{'            shift, and enter state 35

	Block          goto state 41

State 45

	ListArg -> Arg .                                    (rule 28)
	ListArg -> Arg . ',' ListArg                        (rule 29)

	')'            reduce using rule 28
	','            shift, and enter state 115
	'|'            reduce using rule 28


State 46

	Expr5 -> '|' ListArg . '|' Block                    (rule 78)
	Expr -> '|' ListArg . '|' Expr1                     (rule 93)

	'|'            shift, and enter state 114


State 47

	Arg -> 'val' . Ident ':' Type                       (rule 24)
	Arg -> 'val' . Ident ':' 'new' Type                 (rule 26)

	L_Ident        shift, and enter state 2

	Ident          goto state 113

State 48

	Arg -> 'var' . Ident ':' Type                       (rule 23)
	Arg -> 'var' . Ident ':' 'new' Type                 (rule 25)

	L_Ident        shift, and enter state 2

	Ident          goto state 112

State 49

	Block -> '{' ListInstr . '}'                        (rule 38)

	'}'            shift, and enter state 111


State 50

	Instr -> 'while' Expr . Block                       (rule 17)
	Instr -> 'while' Expr . Block 'finally' Block       (rule 18)

	'{'            shift, and enter state 35

	Block          goto state 110

State 51

	Item -> Ident . ':' Type '=' Expr                   (rule 30)
	Item -> Ident . '=' Expr                            (rule 31)
	Item -> Ident . ':' Type                            (rule 32)

	':'            shift, and enter state 108
	'='            shift, and enter state 109


State 52

	ListItem -> Item .                                  (rule 34)
	ListItem -> Item . ',' ListItem                     (rule 35)

	','            shift, and enter state 107
	';'            reduce using rule 34


State 53

	Decl -> 'var' ListItem .                            (rule 36)

	';'            reduce using rule 36


State 54

	Decl -> 'val' ListItem .                            (rule 37)

	';'            reduce using rule 37


State 55

	Instr -> 'return' Expr . ';'                        (rule 11)

	';'            shift, and enter state 106


State 56

	Instr -> 'return' ';' .                             (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'break'        reduce using rule 12
	'continue'     reduce using rule 12
	'false'        reduce using rule 12
	'for'          reduce using rule 12
	'fun'          reduce using rule 12
	'if'           reduce using rule 12
	'return'       reduce using rule 12
	'true'         reduce using rule 12
	'val'          reduce using rule 12
	'var'          reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'|'            reduce using rule 12
	'||'           reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 57

	Instr -> 'if' Expr . Block                          (rule 15)
	Instr -> 'if' Expr . Block ListElif 'else' Block    (rule 16)

	'{'            shift, and enter state 35

	Block          goto state 105

State 58

	Instr -> 'fun' Ident . '(' ListArg ')' ':' Type Block    (rule 5)
	Instr -> 'fun' Ident . '(' ListArg ')' Block        (rule 6)

	'('            shift, and enter state 104


State 59

	Instr -> 'for' Ident . '=' Expr '..' Expr Block     (rule 19)

	'='            shift, and enter state 103


State 60

	Instr -> 'continue' ';' .                           (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'break'        reduce using rule 14
	'continue'     reduce using rule 14
	'false'        reduce using rule 14
	'for'          reduce using rule 14
	'fun'          reduce using rule 14
	'if'           reduce using rule 14
	'return'       reduce using rule 14
	'true'         reduce using rule 14
	'val'          reduce using rule 14
	'var'          reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'|'            reduce using rule 14
	'||'           reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 61

	Instr -> 'break' ';' .                              (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'break'        reduce using rule 13
	'continue'     reduce using rule 13
	'false'        reduce using rule 13
	'for'          reduce using rule 13
	'fun'          reduce using rule 13
	'if'           reduce using rule 13
	'return'       reduce using rule 13
	'true'         reduce using rule 13
	'val'          reduce using rule 13
	'var'          reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'|'            reduce using rule 13
	'||'           reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 62

	Expr6 -> '(' Expr . ')'                             (rule 76)

	')'            shift, and enter state 102


State 63

	Instr -> Expr ';' .                                 (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'fun'          reduce using rule 20
	'if'           reduce using rule 20
	'return'       reduce using rule 20
	'true'         reduce using rule 20
	'val'          reduce using rule 20
	'var'          reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'|'            reduce using rule 20
	'||'           reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20
	%eof           reduce using rule 20


State 64

	Expr -> Expr1 OrOp . Expr                           (rule 91)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 101

State 65

	Expr -> Expr1 '?' . Expr1 ':' Expr                  (rule 92)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 43
	'||'           shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 100

State 66

	OrOp -> '||' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	'|'            reduce using rule 64
	'||'           reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 67

	Expr1 -> Expr2 AndOp . Expr1                        (rule 89)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 43
	'||'           shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 99

State 68

	Expr2 -> Expr2 RelOp . Expr3                        (rule 87)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 43
	'||'           shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 98

State 69

	RelOp -> '!=' .                                     (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	'|'            reduce using rule 66
	'||'           reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 70

	AndOp -> '&&' .                                     (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	'|'            reduce using rule 63
	'||'           reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 71

	RelOp -> '<' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	'|'            reduce using rule 67
	'||'           reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 72

	RelOp -> '<=' .                                     (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	'|'            reduce using rule 69
	'||'           reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 73

	RelOp -> '==' .                                     (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	'|'            reduce using rule 65
	'||'           reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 74

	RelOp -> '>' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	'|'            reduce using rule 68
	'||'           reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 75

	RelOp -> '>=' .                                     (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	'|'            reduce using rule 70
	'||'           reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 76

	Expr3 -> Expr3 PlsOp . Expr4                        (rule 85)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 43
	'||'           shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 97

State 77

	PlsOp -> '+' .                                      (rule 56)

	'!'            reduce using rule 56
	'('            reduce using rule 56
	'-'            reduce using rule 56
	'false'        reduce using rule 56
	'true'         reduce using rule 56
	'|'            reduce using rule 56
	'||'           reduce using rule 56
	L_Ident        reduce using rule 56
	L_integ        reduce using rule 56
	L_quoted       reduce using rule 56


State 78

	PlsOp -> '-' .                                      (rule 57)

	'!'            reduce using rule 57
	'('            reduce using rule 57
	'-'            reduce using rule 57
	'false'        reduce using rule 57
	'true'         reduce using rule 57
	'|'            reduce using rule 57
	'||'           reduce using rule 57
	L_Ident        reduce using rule 57
	L_integ        reduce using rule 57
	L_quoted       reduce using rule 57


State 79

	Expr4 -> Expr4 MulOp . Expr5                        (rule 83)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 43
	'||'           shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 96

State 80

	MulOp -> '%' .                                      (rule 60)

	'!'            reduce using rule 60
	'('            reduce using rule 60
	'-'            reduce using rule 60
	'false'        reduce using rule 60
	'true'         reduce using rule 60
	'|'            reduce using rule 60
	'||'           reduce using rule 60
	L_Ident        reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60


State 81

	MulOp -> '*' .                                      (rule 58)

	'!'            reduce using rule 58
	'('            reduce using rule 58
	'-'            reduce using rule 58
	'false'        reduce using rule 58
	'true'         reduce using rule 58
	'|'            reduce using rule 58
	'||'           reduce using rule 58
	L_Ident        reduce using rule 58
	L_integ        reduce using rule 58
	L_quoted       reduce using rule 58


State 82

	MulOp -> '/' .                                      (rule 59)

	'!'            reduce using rule 59
	'('            reduce using rule 59
	'-'            reduce using rule 59
	'false'        reduce using rule 59
	'true'         reduce using rule 59
	'|'            reduce using rule 59
	'||'           reduce using rule 59
	L_Ident        reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59


State 83

	Expr5 -> Expr5 '(' . ListExpr ')'                   (rule 77)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	')'            reduce using rule 96
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 94
	ListExpr       goto state 95

State 84

	Expr5 -> NegOp Expr6 .                              (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	'('            reduce using rule 80
	')'            reduce using rule 80
	'*'            reduce using rule 80
	'+'            reduce using rule 80
	','            reduce using rule 80
	'-'            reduce using rule 80
	'..'           reduce using rule 80
	'/'            reduce using rule 80
	':'            reduce using rule 80
	';'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'?'            reduce using rule 80
	'{'            reduce using rule 80
	'||'           reduce using rule 80


State 85

	Expr5 -> NotOp Expr6 .                              (rule 81)

	'!='           reduce using rule 81
	'%'            reduce using rule 81
	'&&'           reduce using rule 81
	'('            reduce using rule 81
	')'            reduce using rule 81
	'*'            reduce using rule 81
	'+'            reduce using rule 81
	','            reduce using rule 81
	'-'            reduce using rule 81
	'..'           reduce using rule 81
	'/'            reduce using rule 81
	':'            reduce using rule 81
	';'            reduce using rule 81
	'<'            reduce using rule 81
	'<='           reduce using rule 81
	'=='           reduce using rule 81
	'>'            reduce using rule 81
	'>='           reduce using rule 81
	'?'            reduce using rule 81
	'{'            reduce using rule 81
	'||'           reduce using rule 81


State 86

	Instr -> Decl ';' .                                 (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'fun'          reduce using rule 21
	'if'           reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'val'          reduce using rule 21
	'var'          reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'|'            reduce using rule 21
	'||'           reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21
	%eof           reduce using rule 21


State 87

	ListInstr -> Instr ListInstr .                      (rule 40)

	'}'            reduce using rule 40
	%eof           reduce using rule 40


State 88

	Instr -> Ident '++' . ';'                           (rule 8)

	';'            shift, and enter state 93


State 89

	Instr -> Ident '--' . ';'                           (rule 9)

	';'            shift, and enter state 92


State 90

	Instr -> Ident '=' . Expr ';'                       (rule 10)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 91

State 91

	Instr -> Ident '=' Expr . ';'                       (rule 10)

	';'            shift, and enter state 140


State 92

	Instr -> Ident '--' ';' .                           (rule 9)

	'!'            reduce using rule 9
	'('            reduce using rule 9
	'-'            reduce using rule 9
	';'            reduce using rule 9
	'break'        reduce using rule 9
	'continue'     reduce using rule 9
	'false'        reduce using rule 9
	'for'          reduce using rule 9
	'fun'          reduce using rule 9
	'if'           reduce using rule 9
	'return'       reduce using rule 9
	'true'         reduce using rule 9
	'val'          reduce using rule 9
	'var'          reduce using rule 9
	'while'        reduce using rule 9
	'{'            reduce using rule 9
	'|'            reduce using rule 9
	'||'           reduce using rule 9
	'}'            reduce using rule 9
	L_Ident        reduce using rule 9
	L_integ        reduce using rule 9
	L_quoted       reduce using rule 9
	%eof           reduce using rule 9


State 93

	Instr -> Ident '++' ';' .                           (rule 8)

	'!'            reduce using rule 8
	'('            reduce using rule 8
	'-'            reduce using rule 8
	';'            reduce using rule 8
	'break'        reduce using rule 8
	'continue'     reduce using rule 8
	'false'        reduce using rule 8
	'for'          reduce using rule 8
	'fun'          reduce using rule 8
	'if'           reduce using rule 8
	'return'       reduce using rule 8
	'true'         reduce using rule 8
	'val'          reduce using rule 8
	'var'          reduce using rule 8
	'while'        reduce using rule 8
	'{'            reduce using rule 8
	'|'            reduce using rule 8
	'||'           reduce using rule 8
	'}'            reduce using rule 8
	L_Ident        reduce using rule 8
	L_integ        reduce using rule 8
	L_quoted       reduce using rule 8
	%eof           reduce using rule 8


State 94

	ListExpr -> Expr .                                  (rule 97)
	ListExpr -> Expr . ',' ListExpr                     (rule 98)

	')'            reduce using rule 97
	','            shift, and enter state 139


State 95

	Expr5 -> Expr5 '(' ListExpr . ')'                   (rule 77)

	')'            shift, and enter state 138


State 96

	Expr5 -> Expr5 . '(' ListExpr ')'                   (rule 77)
	Expr4 -> Expr4 MulOp Expr5 .                        (rule 83)

	'!='           reduce using rule 83
	'%'            reduce using rule 83
	'&&'           reduce using rule 83
	'('            shift, and enter state 83
	')'            reduce using rule 83
	'*'            reduce using rule 83
	'+'            reduce using rule 83
	','            reduce using rule 83
	'-'            reduce using rule 83
	'..'           reduce using rule 83
	'/'            reduce using rule 83
	':'            reduce using rule 83
	';'            reduce using rule 83
	'<'            reduce using rule 83
	'<='           reduce using rule 83
	'=='           reduce using rule 83
	'>'            reduce using rule 83
	'>='           reduce using rule 83
	'?'            reduce using rule 83
	'{'            reduce using rule 83
	'||'           reduce using rule 83


State 97

	Expr4 -> Expr4 . MulOp Expr5                        (rule 83)
	Expr3 -> Expr3 PlsOp Expr4 .                        (rule 85)

	'!='           reduce using rule 85
	'%'            shift, and enter state 80
	'&&'           reduce using rule 85
	')'            reduce using rule 85
	'*'            shift, and enter state 81
	'+'            reduce using rule 85
	','            reduce using rule 85
	'-'            reduce using rule 85
	'..'           reduce using rule 85
	'/'            shift, and enter state 82
	':'            reduce using rule 85
	';'            reduce using rule 85
	'<'            reduce using rule 85
	'<='           reduce using rule 85
	'=='           reduce using rule 85
	'>'            reduce using rule 85
	'>='           reduce using rule 85
	'?'            reduce using rule 85
	'{'            reduce using rule 85
	'||'           reduce using rule 85

	MulOp          goto state 79

State 98

	Expr3 -> Expr3 . PlsOp Expr4                        (rule 85)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 87)

	'!='           reduce using rule 87
	'&&'           reduce using rule 87
	')'            reduce using rule 87
	'+'            shift, and enter state 77
	','            reduce using rule 87
	'-'            shift, and enter state 78
	'..'           reduce using rule 87
	':'            reduce using rule 87
	';'            reduce using rule 87
	'<'            reduce using rule 87
	'<='           reduce using rule 87
	'=='           reduce using rule 87
	'>'            reduce using rule 87
	'>='           reduce using rule 87
	'?'            reduce using rule 87
	'{'            reduce using rule 87
	'||'           reduce using rule 87

	PlsOp          goto state 76

State 99

	Expr1 -> Expr2 AndOp Expr1 .                        (rule 89)

	')'            reduce using rule 89
	','            reduce using rule 89
	'..'           reduce using rule 89
	':'            reduce using rule 89
	';'            reduce using rule 89
	'?'            reduce using rule 89
	'{'            reduce using rule 89
	'||'           reduce using rule 89


State 100

	Expr -> Expr1 '?' Expr1 . ':' Expr                  (rule 92)

	':'            shift, and enter state 137


State 101

	Expr -> Expr1 OrOp Expr .                           (rule 91)

	')'            reduce using rule 91
	','            reduce using rule 91
	'..'           reduce using rule 91
	';'            reduce using rule 91
	'{'            reduce using rule 91


State 102

	Expr6 -> '(' Expr ')' .                             (rule 76)

	'!='           reduce using rule 76
	'%'            reduce using rule 76
	'&&'           reduce using rule 76
	'('            reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	'+'            reduce using rule 76
	','            reduce using rule 76
	'-'            reduce using rule 76
	'..'           reduce using rule 76
	'/'            reduce using rule 76
	':'            reduce using rule 76
	';'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	'?'            reduce using rule 76
	'{'            reduce using rule 76
	'||'           reduce using rule 76


State 103

	Instr -> 'for' Ident '=' . Expr '..' Expr Block     (rule 19)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 136

State 104

	Instr -> 'fun' Ident '(' . ListArg ')' ':' Type Block    (rule 5)
	Instr -> 'fun' Ident '(' . ListArg ')' Block        (rule 6)

	')'            reduce using rule 27
	'val'          shift, and enter state 47
	'var'          shift, and enter state 48

	Arg            goto state 45
	ListArg        goto state 135

State 105

	Instr -> 'if' Expr Block .                          (rule 15)
	Instr -> 'if' Expr Block . ListElif 'else' Block    (rule 16)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'break'        reduce using rule 15
	'continue'     reduce using rule 15
	'elif'         shift, and enter state 134
	'else'         reduce using rule 42
	'false'        reduce using rule 15
	'for'          reduce using rule 15
	'fun'          reduce using rule 15
	'if'           reduce using rule 15
	'return'       reduce using rule 15
	'true'         reduce using rule 15
	'val'          reduce using rule 15
	'var'          reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'|'            reduce using rule 15
	'||'           reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15
	%eof           reduce using rule 15

	Elif           goto state 132
	ListElif       goto state 133

State 106

	Instr -> 'return' Expr ';' .                        (rule 11)

	'!'            reduce using rule 11
	'('            reduce using rule 11
	'-'            reduce using rule 11
	';'            reduce using rule 11
	'break'        reduce using rule 11
	'continue'     reduce using rule 11
	'false'        reduce using rule 11
	'for'          reduce using rule 11
	'fun'          reduce using rule 11
	'if'           reduce using rule 11
	'return'       reduce using rule 11
	'true'         reduce using rule 11
	'val'          reduce using rule 11
	'var'          reduce using rule 11
	'while'        reduce using rule 11
	'{'            reduce using rule 11
	'|'            reduce using rule 11
	'||'           reduce using rule 11
	'}'            reduce using rule 11
	L_Ident        reduce using rule 11
	L_integ        reduce using rule 11
	L_quoted       reduce using rule 11
	%eof           reduce using rule 11


State 107

	ListItem -> Item ',' . ListItem                     (rule 35)

	';'            reduce using rule 33
	L_Ident        shift, and enter state 2

	Ident          goto state 51
	Item           goto state 52
	ListItem       goto state 131

State 108

	Item -> Ident ':' . Type '=' Expr                   (rule 30)
	Item -> Ident ':' . Type                            (rule 32)

	'('            shift, and enter state 126
	'Boolean'      shift, and enter state 127
	'Integer'      shift, and enter state 128
	'String'       shift, and enter state 129
	'Unit'         shift, and enter state 130

	Type           goto state 125

State 109

	Item -> Ident '=' . Expr                            (rule 31)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 124

State 110

	Instr -> 'while' Expr Block .                       (rule 17)
	Instr -> 'while' Expr Block . 'finally' Block       (rule 18)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'false'        reduce using rule 17
	'finally'      shift, and enter state 123
	'for'          reduce using rule 17
	'fun'          reduce using rule 17
	'if'           reduce using rule 17
	'return'       reduce using rule 17
	'true'         reduce using rule 17
	'val'          reduce using rule 17
	'var'          reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'|'            reduce using rule 17
	'||'           reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17
	%eof           reduce using rule 17


State 111

	Block -> '{' ListInstr '}' .                        (rule 38)

	'!'            reduce using rule 38
	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'..'           reduce using rule 38
	'/'            reduce using rule 38
	':'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'?'            reduce using rule 38
	'break'        reduce using rule 38
	'continue'     reduce using rule 38
	'elif'         reduce using rule 38
	'else'         reduce using rule 38
	'false'        reduce using rule 38
	'finally'      reduce using rule 38
	'for'          reduce using rule 38
	'fun'          reduce using rule 38
	'if'           reduce using rule 38
	'return'       reduce using rule 38
	'true'         reduce using rule 38
	'val'          reduce using rule 38
	'var'          reduce using rule 38
	'while'        reduce using rule 38
	'{'            reduce using rule 38
	'|'            reduce using rule 38
	'||'           reduce using rule 38
	'}'            reduce using rule 38
	L_Ident        reduce using rule 38
	L_integ        reduce using rule 38
	L_quoted       reduce using rule 38
	%eof           reduce using rule 38


State 112

	Arg -> 'var' Ident . ':' Type                       (rule 23)
	Arg -> 'var' Ident . ':' 'new' Type                 (rule 25)

	':'            shift, and enter state 122


State 113

	Arg -> 'val' Ident . ':' Type                       (rule 24)
	Arg -> 'val' Ident . ':' 'new' Type                 (rule 26)

	':'            shift, and enter state 121


State 114

	Expr5 -> '|' ListArg '|' . Block                    (rule 78)
	Expr -> '|' ListArg '|' . Expr1                     (rule 93)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'{'            shift, and enter state 35
	'|'            shift, and enter state 43
	'||'           shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	Block          goto state 119
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 120

State 115

	ListArg -> Arg ',' . ListArg                        (rule 29)

	')'            reduce using rule 27
	'val'          shift, and enter state 47
	'var'          shift, and enter state 48
	'|'            reduce using rule 27

	Arg            goto state 45
	ListArg        goto state 118

State 116

	Expr5 -> '|' ListArg . '|' Block                    (rule 78)

	'|'            shift, and enter state 117


State 117

	Expr5 -> '|' ListArg '|' . Block                    (rule 78)

	'{'            shift, and enter state 35

	Block          goto state 119

State 118

	ListArg -> Arg ',' ListArg .                        (rule 29)

	')'            reduce using rule 29
	'|'            reduce using rule 29


State 119

	Expr5 -> '|' ListArg '|' Block .                    (rule 78)

	'!='           reduce using rule 78
	'%'            reduce using rule 78
	'&&'           reduce using rule 78
	'('            reduce using rule 78
	')'            reduce using rule 78
	'*'            reduce using rule 78
	'+'            reduce using rule 78
	','            reduce using rule 78
	'-'            reduce using rule 78
	'..'           reduce using rule 78
	'/'            reduce using rule 78
	':'            reduce using rule 78
	';'            reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'=='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	'?'            reduce using rule 78
	'{'            reduce using rule 78
	'||'           reduce using rule 78


State 120

	Expr -> '|' ListArg '|' Expr1 .                     (rule 93)

	')'            reduce using rule 93
	','            reduce using rule 93
	'..'           reduce using rule 93
	';'            reduce using rule 93
	'{'            reduce using rule 93


State 121

	Arg -> 'val' Ident ':' . Type                       (rule 24)
	Arg -> 'val' Ident ':' . 'new' Type                 (rule 26)

	'('            shift, and enter state 126
	'Boolean'      shift, and enter state 127
	'Integer'      shift, and enter state 128
	'String'       shift, and enter state 129
	'Unit'         shift, and enter state 130
	'new'          shift, and enter state 157

	Type           goto state 156

State 122

	Arg -> 'var' Ident ':' . Type                       (rule 23)
	Arg -> 'var' Ident ':' . 'new' Type                 (rule 25)

	'('            shift, and enter state 126
	'Boolean'      shift, and enter state 127
	'Integer'      shift, and enter state 128
	'String'       shift, and enter state 129
	'Unit'         shift, and enter state 130
	'new'          shift, and enter state 155

	Type           goto state 154

State 123

	Instr -> 'while' Expr Block 'finally' . Block       (rule 18)

	'{'            shift, and enter state 35

	Block          goto state 153

State 124

	Item -> Ident '=' Expr .                            (rule 31)

	','            reduce using rule 31
	';'            reduce using rule 31


State 125

	Item -> Ident ':' Type . '=' Expr                   (rule 30)
	Item -> Ident ':' Type .                            (rule 32)

	','            reduce using rule 32
	';'            reduce using rule 32
	'='            shift, and enter state 152


State 126

	Type -> '(' . ListTArg ')' '->' Type                (rule 48)

	')'            reduce using rule 53
	'val'          shift, and enter state 150
	'var'          shift, and enter state 151

	TArg           goto state 148
	ListTArg       goto state 149

State 127

	Type -> 'Boolean' .                                 (rule 45)

	')'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	'='            reduce using rule 45
	'{'            reduce using rule 45
	'|'            reduce using rule 45


State 128

	Type -> 'Integer' .                                 (rule 44)

	')'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	'='            reduce using rule 44
	'{'            reduce using rule 44
	'|'            reduce using rule 44


State 129

	Type -> 'String' .                                  (rule 46)

	')'            reduce using rule 46
	','            reduce using rule 46
	';'            reduce using rule 46
	'='            reduce using rule 46
	'{'            reduce using rule 46
	'|'            reduce using rule 46


State 130

	Type -> 'Unit' .                                    (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47
	';'            reduce using rule 47
	'='            reduce using rule 47
	'{'            reduce using rule 47
	'|'            reduce using rule 47


State 131

	ListItem -> Item ',' ListItem .                     (rule 35)

	';'            reduce using rule 35


State 132

	ListElif -> Elif . ListElif                         (rule 43)

	'elif'         shift, and enter state 134
	'else'         reduce using rule 42

	Elif           goto state 132
	ListElif       goto state 147

State 133

	Instr -> 'if' Expr Block ListElif . 'else' Block    (rule 16)

	'else'         shift, and enter state 146


State 134

	Elif -> 'elif' . Expr Block                         (rule 41)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 145

State 135

	Instr -> 'fun' Ident '(' ListArg . ')' ':' Type Block    (rule 5)
	Instr -> 'fun' Ident '(' ListArg . ')' Block        (rule 6)

	')'            shift, and enter state 144


State 136

	Instr -> 'for' Ident '=' Expr . '..' Expr Block     (rule 19)

	'..'           shift, and enter state 143


State 137

	Expr -> Expr1 '?' Expr1 ':' . Expr                  (rule 92)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 142

State 138

	Expr5 -> Expr5 '(' ListExpr ')' .                   (rule 77)

	'!='           reduce using rule 77
	'%'            reduce using rule 77
	'&&'           reduce using rule 77
	'('            reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	'+'            reduce using rule 77
	','            reduce using rule 77
	'-'            reduce using rule 77
	'..'           reduce using rule 77
	'/'            reduce using rule 77
	':'            reduce using rule 77
	';'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	'?'            reduce using rule 77
	'{'            reduce using rule 77
	'||'           reduce using rule 77


State 139

	ListExpr -> Expr ',' . ListExpr                     (rule 98)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	')'            reduce using rule 96
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 94
	ListExpr       goto state 141

State 140

	Instr -> Ident '=' Expr ';' .                       (rule 10)

	'!'            reduce using rule 10
	'('            reduce using rule 10
	'-'            reduce using rule 10
	';'            reduce using rule 10
	'break'        reduce using rule 10
	'continue'     reduce using rule 10
	'false'        reduce using rule 10
	'for'          reduce using rule 10
	'fun'          reduce using rule 10
	'if'           reduce using rule 10
	'return'       reduce using rule 10
	'true'         reduce using rule 10
	'val'          reduce using rule 10
	'var'          reduce using rule 10
	'while'        reduce using rule 10
	'{'            reduce using rule 10
	'|'            reduce using rule 10
	'||'           reduce using rule 10
	'}'            reduce using rule 10
	L_Ident        reduce using rule 10
	L_integ        reduce using rule 10
	L_quoted       reduce using rule 10
	%eof           reduce using rule 10


State 141

	ListExpr -> Expr ',' ListExpr .                     (rule 98)

	')'            reduce using rule 98


State 142

	Expr -> Expr1 '?' Expr1 ':' Expr .                  (rule 92)

	')'            reduce using rule 92
	','            reduce using rule 92
	'..'           reduce using rule 92
	';'            reduce using rule 92
	'{'            reduce using rule 92


State 143

	Instr -> 'for' Ident '=' Expr '..' . Expr Block     (rule 19)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 171

State 144

	Instr -> 'fun' Ident '(' ListArg ')' . ':' Type Block    (rule 5)
	Instr -> 'fun' Ident '(' ListArg ')' . Block        (rule 6)

	':'            shift, and enter state 170
	'{'            shift, and enter state 35

	Block          goto state 169

State 145

	Elif -> 'elif' Expr . Block                         (rule 41)

	'{'            shift, and enter state 35

	Block          goto state 168

State 146

	Instr -> 'if' Expr Block ListElif 'else' . Block    (rule 16)

	'{'            shift, and enter state 35

	Block          goto state 167

State 147

	ListElif -> Elif ListElif .                         (rule 43)

	'else'         reduce using rule 43


State 148

	ListTArg -> TArg .                                  (rule 54)
	ListTArg -> TArg . ',' ListTArg                     (rule 55)

	')'            reduce using rule 54
	','            shift, and enter state 166


State 149

	Type -> '(' ListTArg . ')' '->' Type                (rule 48)

	')'            shift, and enter state 165


State 150

	TArg -> 'val' . Type                                (rule 50)
	TArg -> 'val' . '$' Type                            (rule 52)

	'$'            shift, and enter state 164
	'('            shift, and enter state 126
	'Boolean'      shift, and enter state 127
	'Integer'      shift, and enter state 128
	'String'       shift, and enter state 129
	'Unit'         shift, and enter state 130

	Type           goto state 163

State 151

	TArg -> 'var' . Type                                (rule 49)
	TArg -> 'var' . '$' Type                            (rule 51)

	'$'            shift, and enter state 162
	'('            shift, and enter state 126
	'Boolean'      shift, and enter state 127
	'Integer'      shift, and enter state 128
	'String'       shift, and enter state 129
	'Unit'         shift, and enter state 130

	Type           goto state 161

State 152

	Item -> Ident ':' Type '=' . Expr                   (rule 30)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 26
	'true'         shift, and enter state 31
	'|'            shift, and enter state 36
	'||'           shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 40
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 11
	NegOp          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 160

State 153

	Instr -> 'while' Expr Block 'finally' Block .       (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'fun'          reduce using rule 18
	'if'           reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'val'          reduce using rule 18
	'var'          reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'|'            reduce using rule 18
	'||'           reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	%eof           reduce using rule 18


State 154

	Arg -> 'var' Ident ':' Type .                       (rule 23)

	')'            reduce using rule 23
	','            reduce using rule 23
	'|'            reduce using rule 23


State 155

	Arg -> 'var' Ident ':' 'new' . Type                 (rule 25)

	'('            shift, and enter state 126
	'Boolean'      shift, and enter state 127
	'Integer'      shift, and enter state 128
	'String'       shift, and enter state 129
	'Unit'         shift, and enter state 130

	Type           goto state 159

State 156

	Arg -> 'val' Ident ':' Type .                       (rule 24)

	')'            reduce using rule 24
	','            reduce using rule 24
	'|'            reduce using rule 24


State 157

	Arg -> 'val' Ident ':' 'new' . Type                 (rule 26)

	'('            shift, and enter state 126
	'Boolean'      shift, and enter state 127
	'Integer'      shift, and enter state 128
	'String'       shift, and enter state 129
	'Unit'         shift, and enter state 130

	Type           goto state 158

State 158

	Arg -> 'val' Ident ':' 'new' Type .                 (rule 26)

	')'            reduce using rule 26
	','            reduce using rule 26
	'|'            reduce using rule 26


State 159

	Arg -> 'var' Ident ':' 'new' Type .                 (rule 25)

	')'            reduce using rule 25
	','            reduce using rule 25
	'|'            reduce using rule 25


State 160

	Item -> Ident ':' Type '=' Expr .                   (rule 30)

	','            reduce using rule 30
	';'            reduce using rule 30


State 161

	TArg -> 'var' Type .                                (rule 49)

	')'            reduce using rule 49
	','            reduce using rule 49


State 162

	TArg -> 'var' '$' . Type                            (rule 51)

	'('            shift, and enter state 126
	'Boolean'      shift, and enter state 127
	'Integer'      shift, and enter state 128
	'String'       shift, and enter state 129
	'Unit'         shift, and enter state 130

	Type           goto state 177

State 163

	TArg -> 'val' Type .                                (rule 50)

	')'            reduce using rule 50
	','            reduce using rule 50


State 164

	TArg -> 'val' '$' . Type                            (rule 52)

	'('            shift, and enter state 126
	'Boolean'      shift, and enter state 127
	'Integer'      shift, and enter state 128
	'String'       shift, and enter state 129
	'Unit'         shift, and enter state 130

	Type           goto state 176

State 165

	Type -> '(' ListTArg ')' . '->' Type                (rule 48)

	'->'           shift, and enter state 175


State 166

	ListTArg -> TArg ',' . ListTArg                     (rule 55)

	')'            reduce using rule 53
	'val'          shift, and enter state 150
	'var'          shift, and enter state 151

	TArg           goto state 148
	ListTArg       goto state 174

State 167

	Instr -> 'if' Expr Block ListElif 'else' Block .    (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'break'        reduce using rule 16
	'continue'     reduce using rule 16
	'false'        reduce using rule 16
	'for'          reduce using rule 16
	'fun'          reduce using rule 16
	'if'           reduce using rule 16
	'return'       reduce using rule 16
	'true'         reduce using rule 16
	'val'          reduce using rule 16
	'var'          reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'|'            reduce using rule 16
	'||'           reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16
	%eof           reduce using rule 16


State 168

	Elif -> 'elif' Expr Block .                         (rule 41)

	'elif'         reduce using rule 41
	'else'         reduce using rule 41


State 169

	Instr -> 'fun' Ident '(' ListArg ')' Block .        (rule 6)

	'!'            reduce using rule 6
	'('            reduce using rule 6
	'-'            reduce using rule 6
	';'            reduce using rule 6
	'break'        reduce using rule 6
	'continue'     reduce using rule 6
	'false'        reduce using rule 6
	'for'          reduce using rule 6
	'fun'          reduce using rule 6
	'if'           reduce using rule 6
	'return'       reduce using rule 6
	'true'         reduce using rule 6
	'val'          reduce using rule 6
	'var'          reduce using rule 6
	'while'        reduce using rule 6
	'{'            reduce using rule 6
	'|'            reduce using rule 6
	'||'           reduce using rule 6
	'}'            reduce using rule 6
	L_Ident        reduce using rule 6
	L_integ        reduce using rule 6
	L_quoted       reduce using rule 6
	%eof           reduce using rule 6


State 170

	Instr -> 'fun' Ident '(' ListArg ')' ':' . Type Block    (rule 5)

	'('            shift, and enter state 126
	'Boolean'      shift, and enter state 127
	'Integer'      shift, and enter state 128
	'String'       shift, and enter state 129
	'Unit'         shift, and enter state 130

	Type           goto state 173

State 171

	Instr -> 'for' Ident '=' Expr '..' Expr . Block     (rule 19)

	'{'            shift, and enter state 35

	Block          goto state 172

State 172

	Instr -> 'for' Ident '=' Expr '..' Expr Block .     (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'fun'          reduce using rule 19
	'if'           reduce using rule 19
	'return'       reduce using rule 19
	'true'         reduce using rule 19
	'val'          reduce using rule 19
	'var'          reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'|'            reduce using rule 19
	'||'           reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19
	%eof           reduce using rule 19


State 173

	Instr -> 'fun' Ident '(' ListArg ')' ':' Type . Block    (rule 5)

	'{'            shift, and enter state 35

	Block          goto state 179

State 174

	ListTArg -> TArg ',' ListTArg .                     (rule 55)

	')'            reduce using rule 55


State 175

	Type -> '(' ListTArg ')' '->' . Type                (rule 48)

	'('            shift, and enter state 126
	'Boolean'      shift, and enter state 127
	'Integer'      shift, and enter state 128
	'String'       shift, and enter state 129
	'Unit'         shift, and enter state 130

	Type           goto state 178

State 176

	TArg -> 'val' '$' Type .                            (rule 52)

	')'            reduce using rule 52
	','            reduce using rule 52


State 177

	TArg -> 'var' '$' Type .                            (rule 51)

	')'            reduce using rule 51
	','            reduce using rule 51


State 178

	Type -> '(' ListTArg ')' '->' Type .                (rule 48)

	')'            reduce using rule 48
	','            reduce using rule 48
	';'            reduce using rule 48
	'='            reduce using rule 48
	'{'            reduce using rule 48
	'|'            reduce using rule 48


State 179

	Instr -> 'fun' Ident '(' ListArg ')' ':' Type Block .    (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'break'        reduce using rule 5
	'continue'     reduce using rule 5
	'false'        reduce using rule 5
	'for'          reduce using rule 5
	'fun'          reduce using rule 5
	'if'           reduce using rule 5
	'return'       reduce using rule 5
	'true'         reduce using rule 5
	'val'          reduce using rule 5
	'var'          reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'|'            reduce using rule 5
	'||'           reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 99
Number of terminals: 51
Number of non-terminals: 33
Number of states: 180
